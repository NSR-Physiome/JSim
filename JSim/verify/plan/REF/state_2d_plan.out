==== Planner Log ====
Plan options=[maxBuildTime=120, maxImplicitBlock=10, initNaN=false, abortNaN=false, traceNaN=false, traceVars=, ignoreAllOverspec=false, ignoreAllUnderspec=false, splitBlocks=false, parallelize=false]
Loading Variables
  add var: realDomain t
  add var: real t.min
  add var: real t.max
  add var: int t.ct
  add var: real t.delta
  add var: realDomain x
  add var: real x.min
  add var: real x.max
  add var: int x.ct
  add var: real x.delta
  add var: realState r(t,x)
Loading Constraints
  t.min=0 :: [t.min]
  t.max=10 :: [t.max]
  t.delta=1 :: [t.delta]
  x.min=0 :: [x.min]
  x.max=1 :: [x.max]
  x.delta=.1 :: [x.delta]
  when (t=t.min) r=1 :: [r(t.min)]
  event(t>5) [r:=r+1]
Input      phase completed with 0 errors, 0 warnings.

Toolbox phase starting ...
  add tool: domain t
  add tool: domain x
  add tool: state r
Toolbox phase - cycle 1:
  check eqn: t.min=0; [t.min]
  add tool: t.min=0
  check eqn: t.max=10; [t.max]
  add tool: t.max=10
  check eqn: t.delta=1; [t.delta]
  add tool: t.delta=1
  add tool: t.ct=(t.max-t.min)/t.delta+1.5
  check eqn: x.min=0; [x.min]
  add tool: x.min=0
  check eqn: x.max=1; [x.max]
  add tool: x.max=1
  check eqn: x.delta=.1; [x.delta]
  add tool: x.delta=.1
  add tool: x.ct=(x.max-x.min)/x.delta+1.5
  check eqn: when (t=t.min) r=1; [r(t.min)]
  add tool: r(t.min)=1
    r is now entirely solved
Toolbox phase - all cycles completed
Toolbox    phase completed with 0 errors, 0 warnings.

Sequencing phase starting ...
Tools to sequence:
  @t@x state r :: [r]<<[r(t.min)]
  x.delta=.1 :: [x.delta]<<[]
  x.ct=(x.max-x.min)/x.delta+1.5 :: [x.ct]<<[x.max, x.min, x.delta]
  x.max=1 :: [x.max]<<[]
  x.min=0 :: [x.min]<<[]
  domain x :: [x]<<[x.min, x.max, x.ct, x.delta]
  t.delta=1 :: [t.delta]<<[]
  t.ct=(t.max-t.min)/t.delta+1.5 :: [t.ct]<<[t.max, t.min, t.delta]
  t.max=10 :: [t.max]<<[]
  t.min=0 :: [t.min]<<[]
  domain t :: [t]<<[t.min, t.max, t.ct, t.delta]
  @x r(t.min)=1 :: [r(t.min)]<<[]
Events to seqence:
  @t@x event(t>5) [r:=r+1] :: [r]<<[t, r]
Relations to sequence:
Creating vuTools map ...
Adding reuse & query tools ...
Creating MainGraph ...
loopOrder=[t, x]
  addNode r seqLoops=(t,x) phase=t#1+x#1 fft=t
  addNode x.delta seqLoops=() phase=main fft=null
  addNode x.ct seqLoops=() phase=main fft=null
  addNode x.max seqLoops=() phase=main fft=null
  addNode x.min seqLoops=() phase=main fft=null
  addNode x seqLoops=() phase=main fft=null
  addNode t.delta seqLoops=() phase=main fft=null
  addNode t.ct seqLoops=() phase=main fft=null
  addNode t.max seqLoops=() phase=main fft=null
  addNode t.min seqLoops=() phase=main fft=null
  addNode t seqLoops=() phase=main fft=null
  addNode r(t.min) seqLoops=(x) phase=x#1 fft=null
  addNode event-1[r] seqLoops=(t,x) phase=t#1+x#1 fft=null
Saving graph pullfinder
Building mainline block ...
Mainline block graph:
building block for phase main
  adding x.delta=.1 to main
  adding x.max=1 to main
  adding x.min=0 to main
  adding t.delta=1 to main
  adding t.max=10 to main
  adding t.min=0 to main
  adding x.ct=(x.max-x.min)/x.delta+1.5 to main
  adding domain x to main
  adding t.ct=(t.max-t.min)/t.delta+1.5 to main
  adding domain t to main
  subphase t#1 entryEdge=r(t.min)->r
  subphase x#1 entryEdge=null
building block for phase x#1
  adding r(t.min)=1 to loop-x
  adding loop-x to main
  subphase t#1 entryEdge=null
building block for phase t#1
  subphase t#1+x#1 entryEdge=null
building block for phase t#1+x#1
  adding event(t>5) [r:=r+1] to loop-x
  adding state r to loop-x
  adding loop-x to loop-t
  adding loop-t to main
Sequencing phase completed with 0 errors, 0 warnings.

==== Main Calculation Block ====
main
  x.delta=.1
  x.max=1
  x.min=0
  t.delta=1
  t.max=10
  t.min=0
  x.ct=(x.max-x.min)/x.delta+1.5
  domain x
  t.ct=(t.max-t.min)/t.delta+1.5
  domain t
  loop-x
    r(t.min)=1
  loop-t
    loop-x
      event(t>5) [r:=r+1]
      state r

