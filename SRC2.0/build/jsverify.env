#!/bin/bash

# set verify environment vars

# query current environment
query() {
  echo "JSIMHOME=$JSIMHOME"
  echo "JSBATCH=$JSBATCH"
  echo "JSFIM=$JSFIM"
  echo "JSXWRAP=$JSXWRAP"
  echo "JSCOMPILE_C=$JSCOMPILE_C"
  if [ "$JSCOMPILE_C" != "" -a ! -r "$JSCOMPILE_C" ]
  then
    echo "  Warning: above file does not exist"
  fi
  echo "JSXMAKEFILE=$JSXMAKEFILE"
  echo "JSFPACK=$JSFPACK"
}
  
# set environment based on given JSIMHOME
dist() {
  if [ ! -r "$1" ]
  then
    echo "jsverify.env error: $1 does not exist"
  else 
    JSIMHOME="$1"
# Adjust JSIMHOME for Mac OS X for backwards compatibility 
# if it is set to the folder enclosing JSim.app 
    if [ ! -d "$JSIMHOME"/lib -a "$JSIMOS" = 'macos' ]
    then
      JSIMHOME="$JSIMHOME"/JSim.app/Contents/Resources
    fi
    export JSIMHOME
    BINDIR=`/bin/ls -d "$JSIMHOME"/*/bin`
    export JSBATCH="$BINDIR"/jsbatch"$BAT"
    export JSFIM="$BINDIR"/jsfim"$BAT"
    export JSXWRAP="$BINDIR"/jsxwrap
    export JSCOMPILE_C="$JSIMHOME"/local/jscompile_c
    export JSXMAKEFILE="$JSIMHOME"/lib/Makefile.global
    export JSFPACK="$JSIMHOME"/doc/examples/fpack
    if [ ! -d "$JSFPACK" -a "$JSIMOS" = 'macos' ]
    then
        export JSFPACK=`sed 's:[^/]*\.app/Contents/Resources$::' <<< "$JSIMHOME"`doc/examples/fpack
    fi
    query
  fi
}

# .bat extensions?
. jsbuild.osarch
if [ "$JSIMOS" = "win32" ]
then
  BAT=".bat"
else
  BAT=""
fi

# no args shows current environment
if [ $# = 0 ]
then
  query
  return 0
fi

DIR="$1"
if [ "$DIR" = "nsr" ]
then
  DIR=/usr/local/jsim/jsim
fi

# src distrib
if [ "$DIR" = "src" ]
then 
  export JSIMHOME=$JSIMSRC/home
  export JSBATCH=$JSIMSRC/build/jsbatch.db
  export JSFIM=$JSIMSRC/build/jsfim.db
  export JSXWRAP=$JSIMSRC/build/jsxwrap.db
  export JSCOMPILE_C=$JSIMSRC/build/jscompile_c.db
  export JSXMAKEFILE=$JSIMSRC/JSim/nonJava/Makefile.global.nml
  export JSFPACK=$JSIMSRC/fpack/proj
  query
else
  dist "$1"
fi
