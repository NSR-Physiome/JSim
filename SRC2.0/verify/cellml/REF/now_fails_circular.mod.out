/*
 * Mathematical Model of a Canine Atrial Action Potential, 2002
 * 
 * Model Status
 * 
 * This is the original unchecked version of the model imported
 * from the previous CellML model repository, 24-Jan-2006.
 * 
 * Model Structure
 * 
 * Since the publishment of the DiFrancesco-Noble model of cardiac
 * myocyte electrophysiology in 1985 several other dynamic mathematical
 * models of the cardiac action potential have been developed.
 * These models include equations that describe transmembrane ion
 * channels and pumps, as well as the intracellular calcium uptake
 * and release activity of the sarcoplasmic reticulum and changing
 * intracellular ionic concentrations. Dynamic models are carefully
 * constructed to accurately simulate the experimentally observed
 * electrophysiological behaviour of cells.
 * 
 * Time-dependent changes (transients) in ionic concentrations
 * and action potentials are often observed in experiments. In
 * mathematical models, transients may represent artifacts of the
 * equations or may reflect physiological processes. In their 2002
 * paper, James Kneller, Rafael J. Ramirez, Denis Charter, Marc
 * Courtemanche and Stanley Nattel studied electrophysiological
 * transients in an ionic model of the canine atrial action potential.
 * Their aims were to determine whether dynamic models reach stability
 * during sustained pacing, to investigate the ionic basis of action
 * potential transients in the model, and to compare real physiological
 * action potential transients with those generated by the model.
 * Their model was based on the previously published Ramirez-Nattel-Courtemanche
 * (RNC) model of the canine action potential (see Ramirez et al.
 * Canine Atrial Action Potential Model, 2000, also in the CellML
 * model repository). In this model, I Cl,Ca brings Cl- into the
 * cell, but there is no equation to account for Cl- efflux. In
 * their 2002 modified version of the RNC model, James Kneller,
 * Rafael J. Ramirez, Denis Charter, Marc Courtemanche and Stanley
 * Nattel include an inward, electroneutral Na+-Cl- cotransporter
 * (I Na,Ca), and a constant Cl- efflux through a leakage pathway
 * (I b,Cl) (see the figure below).
 * 
 * After comparing the results simulated by the model with experimental
 * data, James Kneller, Rafael J. Ramirez, Denis Chartier, Marc
 * Courtemanche and Stanley Nattel conclude that model action potential
 * duration and ionic transients stabilise with appropriate stimulus
 * current assignment. They also found that their model agrees
 * qualitatively with experimental observations, but quantitative
 * discrepancies highlight limitations of model simulations.
 * 
 * The complete original paper reference is cited below:
 * 
 * Time-dependent transients in an ionically based mathematical
 * model of the canine atrial action potential, James Kneller,
 * Rafael J. Ramirez, Denis Chartier, Marc Courtemanche and Stanley
 * Nattel, 2002, American Journal of Physiology, 282, H1437-H1451.
 * PubMed ID: 11893581
 * 
 * schematic diagram of a canine atrial myocyte
 * 
 * [[Image file: kneller_2002.png]]
 * 
 * A schematic representation of the canine atrial myocyte. Intracellular
 * compartments (outlined in dashed lines) indicate the intracellular
 * pools of ion species. The ion concentration in each pool is
 * affected by ionic currents, pumps and exchangers. Black rectangular
 * boxes represent sarcolemmal ion currents, black circles represent
 * the pumps and exchangers. The sarcoplasmic reticulum is divided
 * into two compartments: the Ca2+-release compartment, or junctional
 * sarcoplasmic reticulum (JSR) and the Ca2+-uptake compartment,
 * or network sarcoplasmic reticulum (NSR).
 */

import nsrunit;
// Warning: unit conversion turned off due to unit errors in 31 equation(s)
unit conversion off;
// unit millisecond predefined
unit per_millisecond=1E3 second^(-1);
// unit millivolt predefined
unit per_millivolt=1E3 kilogram^(-1)*meter^(-2)*second^3*ampere^1;
unit per_millivolt_millisecond=1E6 kilogram^(-1)*meter^(-2)*second^2*ampere^1;
// unit millimolar predefined
unit millimolar_per_millisecond=1E3 meter^(-3)*second^(-1)*mole^1;
unit picoA=1E-12 ampere^1;
unit nanoS_per_picoF=1E3 second^(-1);
unit picoF=1E-12 kilogram^(-1)*meter^(-2)*second^4*ampere^2;
unit micrometre_3=1E-18 meter^3;
unit joule_per_mole_kelvin=1 kilogram^1*meter^2*second^(-2)*kelvin^(-1)*mole^(-1);
unit coulomb_per_millimole=1E3 second^1*ampere^1*mole^(-1);
property cellMLNames=string;

math main {
	//Warning:  the following variables had initial values which were
	//  suppressed because the model would otherwise be overdetermined:
	//   Ca_CMDN, Ca_TRPN, Ca_CSQN
	realDomain time millisecond;
	time.min=0;
	extern time.max;
	extern time.delta;
	real V(time) millivolt;
	V.cellMLNames="membrane.V;fast_sodium_current.V;fast_sodium_current_m_gate.V;fast_sodium_current_h_gate.V;fast_sodium_current_j_gate.V;time_independent_potassium_current.V;transient_outward_K_current.V;transient_outward_K_current_oa_gate.V;transient_outward_K_current_oi_gate.V;ultrarapid_delayed_rectifier_K_current.V;ultrarapid_delayed_rectifier_K_current_ua_gate.V;ultrarapid_delayed_rectifier_K_current_ui_gate.V;rapid_delayed_rectifier_K_current.V;rapid_delayed_rectifier_K_current_xr_gate.V;slow_delayed_rectifier_K_current.V;slow_delayed_rectifier_K_current_xs_gate.V;sarcolemmal_Ca_current.V;sarcolemmal_Ca_current_d_gate.V;sarcolemmal_Ca_current_f_gate.V;sarcolemmal_Ca_current_f_Ca_gate.V;Ca_activated_Cl_current.V;Ca_activated_Cl_current_q_Ca_gate.V;sodium_potassium_pump.V;background_currents.V;Na_Ca_exchanger_current.V;Ca_release_current_from_JSR.V;Ca_release_current_from_JSR_u_gate.V;Ca_release_current_from_JSR_v_gate.V;Ca_release_current_from_JSR_w_gate.V";
	when(time=time.min) V=-82.72;
	real R joule_per_mole_kelvin;
	R.cellMLNames="membrane.R;fast_sodium_current.R;time_independent_potassium_current.R;Ca_activated_Cl_current.R;sodium_potassium_pump.R;background_currents.R;Na_Ca_exchanger_current.R";
	R=8.3143;
	real T kelvin;
	T.cellMLNames="membrane.T;fast_sodium_current.T;time_independent_potassium_current.T;Ca_activated_Cl_current.T;sodium_potassium_pump.T;background_currents.T;Na_Ca_exchanger_current.T";
	T=310.0;
	real F coulomb_per_millimole;
	F.cellMLNames="membrane.F;fast_sodium_current.F;time_independent_potassium_current.F;Ca_activated_Cl_current.F;sodium_potassium_pump.F;background_currents.F;Na_Ca_exchanger_current.F;Ca_release_current_from_JSR.F;intracellular_ion_concentrations.F";
	F=96.4867;
	real Cm picoF;
	Cm.cellMLNames="membrane.Cm";
	Cm=100.0;
	real i_stim picoA;
	i_stim.cellMLNames="membrane.i_stim";
	i_stim=-2900.0;
	real i_Na(time) picoA;
	i_Na.cellMLNames="membrane.i_Na;fast_sodium_current.i_Na;intracellular_ion_concentrations.i_Na";
	real i_K1(time) picoA;
	i_K1.cellMLNames="membrane.i_K1;time_independent_potassium_current.i_K1;intracellular_ion_concentrations.i_K1";
	real i_to(time) picoA;
	i_to.cellMLNames="membrane.i_to;transient_outward_K_current.i_to;intracellular_ion_concentrations.i_to";
	real i_Kur_d(time) picoA;
	i_Kur_d.cellMLNames="membrane.i_Kur_d;ultrarapid_delayed_rectifier_K_current.i_Kur_d;intracellular_ion_concentrations.i_Kur_d";
	real i_Kr(time) picoA;
	i_Kr.cellMLNames="membrane.i_Kr;rapid_delayed_rectifier_K_current.i_Kr;intracellular_ion_concentrations.i_Kr";
	real i_Ks(time) picoA;
	i_Ks.cellMLNames="membrane.i_Ks;slow_delayed_rectifier_K_current.i_Ks;intracellular_ion_concentrations.i_Ks";
	real i_Ca(time) picoA;
	i_Ca.cellMLNames="membrane.i_Ca;sarcolemmal_Ca_current.i_Ca;intracellular_ion_concentrations.i_Ca;Ca_release_current_from_JSR.i_Ca";
	real i_Cl_Ca(time) picoA;
	i_Cl_Ca.cellMLNames="membrane.i_Cl_Ca;Ca_activated_Cl_current.i_Cl_Ca;intracellular_ion_concentrations.i_Cl_Ca";
	real i_p_Ca(time) picoA;
	i_p_Ca.cellMLNames="membrane.i_p_Ca;Ca_pump_current.i_p_Ca;intracellular_ion_concentrations.i_p_Ca";
	real i_NaK(time) picoA;
	i_NaK.cellMLNames="membrane.i_NaK;sodium_potassium_pump.i_NaK;intracellular_ion_concentrations.i_NaK";
	real i_NaCa(time) picoA;
	i_NaCa.cellMLNames="membrane.i_NaCa;Na_Ca_exchanger_current.i_NaCa;intracellular_ion_concentrations.i_NaCa;Ca_release_current_from_JSR.i_NaCa";
	real i_B_Na(time) picoA;
	i_B_Na.cellMLNames="membrane.i_B_Na;background_currents.i_B_Na;intracellular_ion_concentrations.i_B_Na";
	real i_B_Ca(time) picoA;
	i_B_Ca.cellMLNames="membrane.i_B_Ca;background_currents.i_B_Ca;intracellular_ion_concentrations.i_B_Ca";
	real i_B_Cl(time) picoA;
	i_B_Cl.cellMLNames="membrane.i_B_Cl;background_currents.i_B_Cl";
	real E_Na(time) millivolt;
	E_Na.cellMLNames="fast_sodium_current.E_Na;background_currents.E_Na;Na_Cl_cotransporter.E_Na";
	real g_Na nanoS_per_picoF;
	g_Na.cellMLNames="fast_sodium_current.g_Na";
	g_Na=7.8;
	real Na_i(time) millimolar;
	Na_i.cellMLNames="fast_sodium_current.Na_i;intracellular_ion_concentrations.Na_i;sodium_potassium_pump.Na_i;Na_Ca_exchanger_current.Na_i";
	when(time=time.min) Na_i=13.86;
	real Na_o millimolar;
	Na_o.cellMLNames="fast_sodium_current.Na_o;standard_ionic_concentrations.Na_o;sodium_potassium_pump.Na_o;Na_Ca_exchanger_current.Na_o";
	Na_o=140.0;
	real m(time) dimensionless;
	m.cellMLNames="fast_sodium_current.m;fast_sodium_current_m_gate.m";
	when(time=time.min) m=0.002256;
	real h(time) dimensionless;
	h.cellMLNames="fast_sodium_current.h;fast_sodium_current_h_gate.h";
	when(time=time.min) h=0.9750;
	real j(time) dimensionless;
	j.cellMLNames="fast_sodium_current.j;fast_sodium_current_j_gate.j";
	when(time=time.min) j=0.9843;
	real alpha_m(time) per_millisecond;
	alpha_m.cellMLNames="fast_sodium_current_m_gate.alpha_m";
	real beta_m(time) per_millisecond;
	beta_m.cellMLNames="fast_sodium_current_m_gate.beta_m";
	real alpha_h(time) per_millisecond;
	alpha_h.cellMLNames="fast_sodium_current_h_gate.alpha_h";
	real beta_h(time) per_millisecond;
	beta_h.cellMLNames="fast_sodium_current_h_gate.beta_h";
	real alpha_j(time) per_millisecond;
	alpha_j.cellMLNames="fast_sodium_current_j_gate.alpha_j";
	real beta_j(time) per_millisecond;
	beta_j.cellMLNames="fast_sodium_current_j_gate.beta_j";
	real E_K(time) millivolt;
	E_K.cellMLNames="time_independent_potassium_current.E_K;transient_outward_K_current.E_K;background_currents.E_K;ultrarapid_delayed_rectifier_K_current.E_K;rapid_delayed_rectifier_K_current.E_K;slow_delayed_rectifier_K_current.E_K";
	real g_K1 nanoS_per_picoF;
	g_K1.cellMLNames="time_independent_potassium_current.g_K1";
	g_K1=0.15;
	real K_o millimolar;
	K_o.cellMLNames="time_independent_potassium_current.K_o;standard_ionic_concentrations.K_o;sodium_potassium_pump.K_o";
	K_o=5.4;
	real K_i(time) millimolar;
	K_i.cellMLNames="time_independent_potassium_current.K_i;intracellular_ion_concentrations.K_i";
	when(time=time.min) K_i=136.9;
	real g_to nanoS_per_picoF;
	g_to.cellMLNames="transient_outward_K_current.g_to";
	g_to=0.19824;
	real oa(time) dimensionless;
	oa.cellMLNames="transient_outward_K_current.oa;transient_outward_K_current_oa_gate.oa";
	when(time=time.min) oa=0.07351;
	real oi(time) dimensionless;
	oi.cellMLNames="transient_outward_K_current.oi;transient_outward_K_current_oi_gate.oi";
	when(time=time.min) oi=0.9978;
	real alpha_oa(time) per_millisecond;
	alpha_oa.cellMLNames="transient_outward_K_current_oa_gate.alpha_oa";
	real beta_oa(time) per_millisecond;
	beta_oa.cellMLNames="transient_outward_K_current_oa_gate.beta_oa";
	real tau_oa(time) millisecond;
	tau_oa.cellMLNames="transient_outward_K_current_oa_gate.tau_oa";
	real oa_infinity(time) dimensionless;
	oa_infinity.cellMLNames="transient_outward_K_current_oa_gate.oa_infinity";
	real alpha_oi(time) per_millisecond;
	alpha_oi.cellMLNames="transient_outward_K_current_oi_gate.alpha_oi";
	real beta_oi(time) per_millisecond;
	beta_oi.cellMLNames="transient_outward_K_current_oi_gate.beta_oi";
	real tau_oi(time) millisecond;
	tau_oi.cellMLNames="transient_outward_K_current_oi_gate.tau_oi";
	real oi_infinity(time) dimensionless;
	oi_infinity.cellMLNames="transient_outward_K_current_oi_gate.oi_infinity";
	real g_Kur_d(time) nanoS_per_picoF;
	g_Kur_d.cellMLNames="ultrarapid_delayed_rectifier_K_current.g_Kur_d";
	real ua(time) dimensionless;
	ua.cellMLNames="ultrarapid_delayed_rectifier_K_current.ua;ultrarapid_delayed_rectifier_K_current_ua_gate.ua";
	when(time=time.min) ua=0.06039;
	real ui(time) dimensionless;
	ui.cellMLNames="ultrarapid_delayed_rectifier_K_current.ui;ultrarapid_delayed_rectifier_K_current_ui_gate.ui";
	when(time=time.min) ui=0.9987;
	real alpha_ua(time) per_millisecond;
	alpha_ua.cellMLNames="ultrarapid_delayed_rectifier_K_current_ua_gate.alpha_ua";
	real beta_ua(time) per_millisecond;
	beta_ua.cellMLNames="ultrarapid_delayed_rectifier_K_current_ua_gate.beta_ua";
	real tau_ua(time) millisecond;
	tau_ua.cellMLNames="ultrarapid_delayed_rectifier_K_current_ua_gate.tau_ua";
	real ua_infinity(time) dimensionless;
	ua_infinity.cellMLNames="ultrarapid_delayed_rectifier_K_current_ua_gate.ua_infinity";
	real alpha_ui(time) per_millisecond;
	alpha_ui.cellMLNames="ultrarapid_delayed_rectifier_K_current_ui_gate.alpha_ui";
	real beta_ui(time) per_millisecond;
	beta_ui.cellMLNames="ultrarapid_delayed_rectifier_K_current_ui_gate.beta_ui";
	real tau_ui(time) millisecond;
	tau_ui.cellMLNames="ultrarapid_delayed_rectifier_K_current_ui_gate.tau_ui";
	real ui_infinity(time) dimensionless;
	ui_infinity.cellMLNames="ultrarapid_delayed_rectifier_K_current_ui_gate.ui_infinity";
	real g_Kr nanoS_per_picoF;
	g_Kr.cellMLNames="rapid_delayed_rectifier_K_current.g_Kr";
	g_Kr=0.06984;
	real xr(time) dimensionless;
	xr.cellMLNames="rapid_delayed_rectifier_K_current.xr;rapid_delayed_rectifier_K_current_xr_gate.xr";
	when(time=time.min) xr=8.647E-7;
	real alpha_xr(time) per_millisecond;
	alpha_xr.cellMLNames="rapid_delayed_rectifier_K_current_xr_gate.alpha_xr";
	real beta_xr(time) per_millisecond;
	beta_xr.cellMLNames="rapid_delayed_rectifier_K_current_xr_gate.beta_xr";
	real tau_xr(time) millisecond;
	tau_xr.cellMLNames="rapid_delayed_rectifier_K_current_xr_gate.tau_xr";
	real xr_infinity(time) dimensionless;
	xr_infinity.cellMLNames="rapid_delayed_rectifier_K_current_xr_gate.xr_infinity";
	real g_Ks nanoS_per_picoF;
	g_Ks.cellMLNames="slow_delayed_rectifier_K_current.g_Ks";
	g_Ks=0.0561;
	real xs(time) dimensionless;
	xs.cellMLNames="slow_delayed_rectifier_K_current.xs;slow_delayed_rectifier_K_current_xs_gate.xs";
	when(time=time.min) xs=0.01853;
	real alpha_xs(time) per_millisecond;
	alpha_xs.cellMLNames="slow_delayed_rectifier_K_current_xs_gate.alpha_xs";
	real beta_xs(time) per_millisecond;
	beta_xs.cellMLNames="slow_delayed_rectifier_K_current_xs_gate.beta_xs";
	real tau_xs(time) millisecond;
	tau_xs.cellMLNames="slow_delayed_rectifier_K_current_xs_gate.tau_xs";
	real xs_infinity(time) dimensionless;
	xs_infinity.cellMLNames="slow_delayed_rectifier_K_current_xs_gate.xs_infinity";
	real g_Ca nanoS_per_picoF;
	g_Ca.cellMLNames="sarcolemmal_Ca_current.g_Ca";
	g_Ca=0.24;
	real Ca_i(time) millimolar;
	Ca_i.cellMLNames="sarcolemmal_Ca_current.Ca_i;intracellular_ion_concentrations.Ca_i;background_currents.Ca_i;Na_Ca_exchanger_current.Ca_i;Ca_pump_current.Ca_i;Ca_release_current_from_JSR.Ca_i;Ca_uptake_current_by_the_NSR.Ca_i;Ca_buffers.Ca_i;sarcolemmal_Ca_current_f_Ca_gate.Ca_i";
	when(time=time.min) Ca_i=1.310E-4;
	real d(time) dimensionless;
	d.cellMLNames="sarcolemmal_Ca_current.d;sarcolemmal_Ca_current_d_gate.d";
	when(time=time.min) d=5.448E-6;
	real f(time) dimensionless;
	f.cellMLNames="sarcolemmal_Ca_current.f;sarcolemmal_Ca_current_f_gate.f";
	when(time=time.min) f=0.9999;
	real f_Ca(time) dimensionless;
	f_Ca.cellMLNames="sarcolemmal_Ca_current.f_Ca;sarcolemmal_Ca_current_f_Ca_gate.f_Ca";
	when(time=time.min) f_Ca=0.6535;
	real d_infinity(time) dimensionless;
	d_infinity.cellMLNames="sarcolemmal_Ca_current_d_gate.d_infinity";
	real tau_d(time) millisecond;
	tau_d.cellMLNames="sarcolemmal_Ca_current_d_gate.tau_d";
	real f_infinity(time) dimensionless;
	f_infinity.cellMLNames="sarcolemmal_Ca_current_f_gate.f_infinity";
	real tau_f(time) millisecond;
	tau_f.cellMLNames="sarcolemmal_Ca_current_f_gate.tau_f";
	real f_Ca_infinity(time) dimensionless;
	f_Ca_infinity.cellMLNames="sarcolemmal_Ca_current_f_Ca_gate.f_Ca_infinity";
	real tau_f_Ca millisecond;
	tau_f_Ca.cellMLNames="sarcolemmal_Ca_current_f_Ca_gate.tau_f_Ca";
	tau_f_Ca=2.0;
	real g_Cl_Ca nanoS_per_picoF;
	g_Cl_Ca.cellMLNames="Ca_activated_Cl_current.g_Cl_Ca";
	g_Cl_Ca=0.3;
	real E_Cl(time) millivolt;
	E_Cl.cellMLNames="Ca_activated_Cl_current.E_Cl;Na_Cl_cotransporter.E_Cl;background_currents.E_Cl";
	real Fn(time) dimensionless;
	Fn.cellMLNames="Ca_activated_Cl_current.Fn;Ca_release_current_from_JSR.Fn;Ca_release_current_from_JSR_u_gate.Fn;Ca_release_current_from_JSR_v_gate.Fn;Ca_activated_Cl_current_q_Ca_gate.Fn";
	real Cl_i(time) millimolar;
	Cl_i.cellMLNames="Ca_activated_Cl_current.Cl_i;intracellular_ion_concentrations.Cl_i";
	when(time=time.min) Cl_i=29.95;
	real Cl_o millimolar;
	Cl_o.cellMLNames="Ca_activated_Cl_current.Cl_o;standard_ionic_concentrations.Cl_o";
	Cl_o=132.0;
	real q_Ca dimensionless;
	q_Ca.cellMLNames="Ca_activated_Cl_current.q_Ca;Ca_activated_Cl_current_q_Ca_gate.q_Ca";
	q_Ca=0.0;
	real q_Ca_infinity(time) dimensionless;
	q_Ca_infinity.cellMLNames="Ca_activated_Cl_current_q_Ca_gate.q_Ca_infinity";
	real tau_q_Ca millisecond;
	tau_q_Ca.cellMLNames="Ca_activated_Cl_current_q_Ca_gate.tau_q_Ca";
	tau_q_Ca=2.0;
	real CT_NaCl(time) picoA;
	CT_NaCl.cellMLNames="Na_Cl_cotransporter.CT_NaCl";
	real n dimensionless;
	n.cellMLNames="Na_Cl_cotransporter.n";
	n=4.0;
	real delta_CT_n dimensionless;
	delta_CT_n.cellMLNames="Na_Cl_cotransporter.delta_CT_n";
	delta_CT_n=87.8251;
	real g_CT nanoS_per_picoF;
	g_CT.cellMLNames="Na_Cl_cotransporter.g_CT";
	g_CT=0.115;
	real Km_Na_i millimolar;
	Km_Na_i.cellMLNames="sodium_potassium_pump.Km_Na_i";
	Km_Na_i=10.0;
	real Km_K_o millimolar;
	Km_K_o.cellMLNames="sodium_potassium_pump.Km_K_o";
	Km_K_o=1.5;
	real i_NaK_max picoA;
	i_NaK_max.cellMLNames="sodium_potassium_pump.i_NaK_max";
	i_NaK_max=0.6;
	real f_NaK(time) dimensionless;
	f_NaK.cellMLNames="sodium_potassium_pump.f_NaK";
	real sigma dimensionless;
	sigma.cellMLNames="sodium_potassium_pump.sigma";
	real I_NaCa_max picoA;
	I_NaCa_max.cellMLNames="Na_Ca_exchanger_current.I_NaCa_max";
	I_NaCa_max=1600.0;
	real K_mNa millimolar;
	K_mNa.cellMLNames="Na_Ca_exchanger_current.K_mNa";
	K_mNa=87.5;
	real K_mCa millimolar;
	K_mCa.cellMLNames="Na_Ca_exchanger_current.K_mCa";
	K_mCa=1.38;
	real K_sat dimensionless;
	K_sat.cellMLNames="Na_Ca_exchanger_current.K_sat";
	K_sat=0.1;
	real Ca_o millimolar;
	Ca_o.cellMLNames="Na_Ca_exchanger_current.Ca_o;standard_ionic_concentrations.Ca_o;background_currents.Ca_o";
	Ca_o=1.8;
	real i_B_K(time) picoA;
	i_B_K.cellMLNames="background_currents.i_B_K;intracellular_ion_concentrations.i_B_K";
	real g_B_Na nanoS_per_picoF;
	g_B_Na.cellMLNames="background_currents.g_B_Na";
	g_B_Na=0.000674;
	real g_B_Ca nanoS_per_picoF;
	g_B_Ca.cellMLNames="background_currents.g_B_Ca";
	g_B_Ca=0.00113;
	real g_B_K nanoS_per_picoF;
	g_B_K.cellMLNames="background_currents.g_B_K";
	g_B_K=0.0;
	real g_B_Cl nanoS_per_picoF;
	g_B_Cl.cellMLNames="background_currents.g_B_Cl";
	g_B_Cl=0.0018;
	real E_Ca(time) millivolt;
	E_Ca.cellMLNames="background_currents.E_Ca";
	real i_p_Ca_max picoA;
	i_p_Ca_max.cellMLNames="Ca_pump_current.i_p_Ca_max";
	i_p_Ca_max=0.275;
	real i_rel(time) picoA;
	i_rel.cellMLNames="Ca_release_current_from_JSR.i_rel;intracellular_ion_concentrations.i_rel";
	real K_rel per_millisecond;
	K_rel.cellMLNames="Ca_release_current_from_JSR.K_rel";
	K_rel=30.0;
	real Ca_release_current_from_JSR.V_rel micrometre_3;
	Ca_release_current_from_JSR.V_rel.cellMLNames="Ca_release_current_from_JSR.V_rel";
	Ca_release_current_from_JSR.V_rel=96.48;
	real Ca_rel(time) millimolar;
	Ca_rel.cellMLNames="Ca_release_current_from_JSR.Ca_rel;intracellular_ion_concentrations.Ca_rel;transfer_current_from_NSR_to_JSR.Ca_rel;Ca_buffers.Ca_rel";
	when(time=time.min) Ca_rel=1.869;
	real u(time) dimensionless;
	u.cellMLNames="Ca_release_current_from_JSR.u;Ca_release_current_from_JSR_u_gate.u";
	when(time=time.min) u=0.0;
	real v(time) dimensionless;
	v.cellMLNames="Ca_release_current_from_JSR.v;Ca_release_current_from_JSR_v_gate.v";
	when(time=time.min) v=1.0;
	real w(time) dimensionless;
	w.cellMLNames="Ca_release_current_from_JSR.w;Ca_release_current_from_JSR_w_gate.w";
	when(time=time.min) w=0.9993;
	real tau_u millisecond;
	tau_u.cellMLNames="Ca_release_current_from_JSR_u_gate.tau_u";
	real u_infinity(time) dimensionless;
	u_infinity.cellMLNames="Ca_release_current_from_JSR_u_gate.u_infinity";
	real tau_v(time) millisecond;
	tau_v.cellMLNames="Ca_release_current_from_JSR_v_gate.tau_v";
	real v_infinity(time) dimensionless;
	v_infinity.cellMLNames="Ca_release_current_from_JSR_v_gate.v_infinity";
	real tau_w(time) millisecond;
	tau_w.cellMLNames="Ca_release_current_from_JSR_w_gate.tau_w";
	real w_infinity(time) dimensionless;
	w_infinity.cellMLNames="Ca_release_current_from_JSR_w_gate.w_infinity";
	real i_tr(time) picoA;
	i_tr.cellMLNames="transfer_current_from_NSR_to_JSR.i_tr;intracellular_ion_concentrations.i_tr";
	real tau_tr millisecond;
	tau_tr.cellMLNames="transfer_current_from_NSR_to_JSR.tau_tr";
	tau_tr=180.0;
	real Ca_up(time) millimolar;
	Ca_up.cellMLNames="transfer_current_from_NSR_to_JSR.Ca_up;intracellular_ion_concentrations.Ca_up;Ca_leak_current_by_the_NSR.Ca_up";
	when(time=time.min) Ca_up=1.869;
	real I_up_max picoA;
	I_up_max.cellMLNames="Ca_uptake_current_by_the_NSR.I_up_max;Ca_leak_current_by_the_NSR.I_up_max";
	I_up_max=0.005;
	real i_up(time) picoA;
	i_up.cellMLNames="Ca_uptake_current_by_the_NSR.i_up;intracellular_ion_concentrations.i_up";
	real K_up millimolar;
	K_up.cellMLNames="Ca_uptake_current_by_the_NSR.K_up";
	K_up=0.00092;
	real i_up_leak(time) picoA;
	i_up_leak.cellMLNames="Ca_leak_current_by_the_NSR.i_up_leak;intracellular_ion_concentrations.i_up_leak";
	real Ca_up_max millimolar;
	Ca_up_max.cellMLNames="Ca_leak_current_by_the_NSR.Ca_up_max";
	Ca_up_max=15.0;
	real CMDN_max millimolar;
	CMDN_max.cellMLNames="Ca_buffers.CMDN_max;intracellular_ion_concentrations.CMDN_max";
	CMDN_max=0.045;
	real TRPN_max millimolar;
	TRPN_max.cellMLNames="Ca_buffers.TRPN_max;intracellular_ion_concentrations.TRPN_max";
	TRPN_max=0.35;
	real CSQN_max millimolar;
	CSQN_max.cellMLNames="Ca_buffers.CSQN_max;intracellular_ion_concentrations.CSQN_max";
	CSQN_max=10.0;
	real J_Ca_CMDN(time) millimolar_per_millisecond;
	J_Ca_CMDN.cellMLNames="Ca_buffers.J_Ca_CMDN;intracellular_ion_concentrations.J_Ca_CMDN";
	real J_Ca_TRPN(time) millimolar_per_millisecond;
	J_Ca_TRPN.cellMLNames="Ca_buffers.J_Ca_TRPN;intracellular_ion_concentrations.J_Ca_TRPN";
	real J_Ca_CSQN(time) millimolar_per_millisecond;
	J_Ca_CSQN.cellMLNames="Ca_buffers.J_Ca_CSQN;intracellular_ion_concentrations.J_Ca_CSQN";
	real Ca_CMDN(time) millimolar;
	Ca_CMDN.cellMLNames="Ca_buffers.Ca_CMDN";
	//Warning: CellML initial value suppressed to prevent overdetermining model.  Original initial value: Ca_CMDN=2.347E-3;
	real Ca_TRPN(time) millimolar;
	Ca_TRPN.cellMLNames="Ca_buffers.Ca_TRPN";
	//Warning: CellML initial value suppressed to prevent overdetermining model.  Original initial value: Ca_TRPN=8.933E-3;
	real Ca_CSQN(time) millimolar;
	Ca_CSQN.cellMLNames="Ca_buffers.Ca_CSQN";
	//Warning: CellML initial value suppressed to prevent overdetermining model.  Original initial value: Ca_CSQN=6.916;
	real V_i micrometre_3;
	V_i.cellMLNames="intracellular_ion_concentrations.V_i";
	V_i=13668.0;
	real intracellular_ion_concentrations.V_rel micrometre_3;
	intracellular_ion_concentrations.V_rel.cellMLNames="intracellular_ion_concentrations.V_rel";
	intracellular_ion_concentrations.V_rel=96.48;
	real V_up micrometre_3;
	V_up.cellMLNames="intracellular_ion_concentrations.V_up";
	V_up=1109.52;

	// <component name="environment">

	// <component name="membrane">
	V:time=((-1)*(i_Na+i_K1+i_to+i_Kur_d+i_Kr+i_Ks+i_Ca+i_Cl_Ca+i_p_Ca+i_NaCa+i_NaK+i_B_Na+i_B_Ca+i_B_Cl+i_stim)/Cm);

	// <component name="fast_sodium_current">
	i_Na=(g_Na*m^3*h*j*(V-E_Na));
	E_Na=(R*T/F*ln(Na_o/Na_i));

	// <component name="fast_sodium_current_m_gate">
	alpha_m=((.32 per_millivolt_millisecond)*((V+(47.13 millivolt))/(1-exp(((-0.1 per_millivolt))*(V+(47.13 millivolt))))));
	beta_m=((.08 per_millisecond)*exp(V/((-11 millivolt))));
	m:time=(alpha_m*((1 per_millivolt)-m)-beta_m*m);

	// <component name="fast_sodium_current_h_gate">
	alpha_h=(if (V<((-40 millivolt))) (.135 per_millisecond)*exp((V+(80 millivolt))/((-6.8 millivolt))) else (0 per_millisecond));
	beta_h=(if (V<((-40 millivolt))) (3.56 per_millisecond)*exp((.079 millivolt)*V)+(3.1E5 per_millisecond)*exp((.35 per_millivolt)*V) else 1/((.13 millisecond)*(1+exp((V+(10.66 millivolt))/((-11.1 millivolt))))));
	h:time=(alpha_h*(1-h)-beta_h*h);

	// <component name="fast_sodium_current_j_gate">
	alpha_j=(if (V<((-40 millivolt))) (((-127140 per_millivolt_millisecond))*exp((.2444 per_millivolt)*V)-(3.474E-5 per_millivolt_millisecond)*exp(((-0.04391 per_millivolt))*V))/(1+exp((.311 per_millivolt)*(V+(79.23 millivolt))))*(V+(37.78 millivolt)) else (0 per_millisecond));
	beta_j=(if (V<((-40 millivolt))) (.1212 per_millisecond)*(exp(((-0.01052 per_millivolt))*V)/(1+exp(((-0.1378 per_millivolt))*(V+(40.14 millivolt))))) else (.3 per_millisecond)*(exp(((-2.535E-7 per_millivolt))*V)/(1+exp(((-0.1 per_millivolt))*(V+(32 millivolt))))));
	j:time=(alpha_j*(1-j)-beta_j*j);

	// <component name="time_independent_potassium_current">
	i_K1=(g_K1*(V-E_K)/(1+exp(.07*(V+(80 millivolt)))));
	E_K=(R*T/F*ln(K_o/K_i));

	// <component name="transient_outward_K_current">
	i_to=(g_to*oa^3*oi*(V-E_K));

	// <component name="transient_outward_K_current_oa_gate">
	oa:time=((oa_infinity-oa)/tau_oa);
	alpha_oa=((.65 per_millisecond)*(exp((V+(18 millivolt))/((-8.5 millivolt)))+exp((V-(16 millivolt))/((-59 millivolt))))^(-1));
	beta_oa=((1.2 per_millisecond)*(2.2+exp((V+(75 millivolt))/(18 millivolt)))^(-1));
	tau_oa=((alpha_oa+beta_oa)^(-1));
	oa_infinity=((1+exp((V+(.5 millivolt))/((-10.5 millivolt))))^((-1)*(1/3)));

	// <component name="transient_outward_K_current_oi_gate">
	oi:time=((oi_infinity-oi)/tau_oi);
	alpha_oi=(((6.2 millisecond)+exp((V+(105.2 millivolt))/(9.85 millivolt)))^(-1));
	beta_oi=(((7.54 millisecond)+exp((V-(8.89 millivolt))/((-12.87 millivolt))))^(-1));
	tau_oi=((alpha_oi+beta_oi)^(-1));
	oi_infinity=((1+exp((V+(43.377 millivolt))/(6.45 millivolt)))^(-1));

	// <component name="ultrarapid_delayed_rectifier_K_current">
	i_Kur_d=(g_Kur_d*ua^3*ui*(V-E_K));
	g_Kur_d=((.00855 nanoS_per_picoF)+(.0779 nanoS_per_picoF)/(1+exp((V+(11 millivolt))/((-16 millivolt)))));

	// <component name="ultrarapid_delayed_rectifier_K_current_ua_gate">
	ua:time=((ua_infinity-ua)/tau_ua);
	alpha_ua=((1.47 per_millisecond)*(exp((V+(33.2 millivolt))/((-30.63 millivolt)))+exp((V-(27.6 millivolt))/((-30.65 millivolt))))^(-1));
	beta_ua=((.42 per_millisecond)*(exp((V+(26.64 millivolt))/(2.49 millivolt))+exp((V+(44.41 millivolt))/(20.36 millivolt)))^(-1));
	tau_ua=((alpha_ua+beta_ua)^(-1));
	ua_infinity=((1+exp((V+(2.81 millivolt))/((-9.49 millivolt))))^((-1)*(1/3)));

	// <component name="ultrarapid_delayed_rectifier_K_current_ui_gate">
	ui:time=((ui_infinity-ui)/tau_ui);
	alpha_ui=(((21 millisecond)+exp((V-(185 millivolt))/((-28 millivolt))))^(-1));
	beta_ui=exp((V-(158 millivolt))/(16 millivolt));
	tau_ui=((alpha_ui+beta_ui)^(-1));
	ui_infinity=((1+exp((V-(99.45 millivolt))/(27.48 millivolt)))^(-1));

	// <component name="rapid_delayed_rectifier_K_current">
	i_Kr=(g_Kr*xr*(.07+.58/(1+exp((V+(15 millivolt))/(22.4 millivolt))))*(V-E_K));

	// <component name="rapid_delayed_rectifier_K_current_xr_gate">
	xr:time=((xr_infinity-xr)/tau_xr);
	alpha_xr=((.04 per_millivolt_millisecond)*((V-(248 millivolt))/(1-exp((V-(248 millivolt))/((-28 millivolt))))));
	beta_xr=((.028 per_millivolt_millisecond)*((V+(163 millivolt))/(exp((V+(163 millivolt))/(21 millivolt))-1)));
	tau_xr=((alpha_xr+beta_xr)^(-1));
	xr_infinity=((1+exp((V+(7.654 millivolt))/((-5.377 millivolt))))^(-1));

	// <component name="slow_delayed_rectifier_K_current">
	i_Ks=(g_Ks*xs^2*(V-E_K));

	// <component name="slow_delayed_rectifier_K_current_xs_gate">
	xs:time=((xs_infinity-xs)/tau_xs);
	alpha_xs=((1E-5 per_millivolt_millisecond)*((V+(28.5 millivolt))/(1-exp((V+(28.5 millivolt))/((-115 millivolt))))));
	beta_xs=((2.3E-4 per_millivolt_millisecond)*((V+(28.5 millivolt))/(exp((V+(28.5 millivolt))/(3.3 millivolt))-1)));
	tau_xs=((alpha_xs+beta_xs)^(-1));
	xs_infinity=((1+exp((V-(13 millivolt))/((-12 millivolt))))^(-0.5));

	// <component name="sarcolemmal_Ca_current">
	i_Ca=(g_Ca*d*f*f_Ca*(V-(65 millivolt)));

	// <component name="sarcolemmal_Ca_current_d_gate">
	d:time=((d_infinity-d)/tau_d);
	d_infinity=((1+exp((V+(10 millivolt))/((-6 millivolt))))^(-1));
	tau_d=(((1 millisecond)-exp((V+(10 millivolt))/((-6.24 millivolt))))/((.035 per_millivolt)*(V+(10 millivolt))*(1+exp((V+(10 millivolt))/(6.24 millivolt)))));

	// <component name="sarcolemmal_Ca_current_f_gate">
	f:time=((f_infinity-f)/tau_f);
	f_infinity=((1+exp((V+(24.6 millivolt))/(6.2 millivolt)))^(-1));
	tau_f=((400 millisecond)*(1+4.5*exp((-7E-4)*(V-(9 millivolt))^2))^(-1));

	// <component name="sarcolemmal_Ca_current_f_Ca_gate">
	f_Ca:time=((f_Ca_infinity-f_Ca)/tau_f_Ca);
	f_Ca_infinity=(.29+.8*(1+exp((Ca_i-(1.2E-4 millimolar))/(6E-5 millimolar)))^(-1));

	// <component name="Ca_activated_Cl_current">
	i_Cl_Ca=(g_Cl_Ca*q_Ca*(V-E_Cl));
	E_Cl=(R*T/F*ln(Cl_o/Cl_i));

	// <component name="Ca_activated_Cl_current_q_Ca_gate">
	q_Ca_infinity=(1-(1+(Fn/1.1E-10)^3)^(-1));

	// <component name="Na_Cl_cotransporter">
	CT_NaCl=(g_CT*(delta_CT_n/(E_Na-E_Cl+delta_CT_n)));

	// <component name="sodium_potassium_pump">
	i_NaK=(i_NaK_max*f_NaK*(1/(1+(Km_Na_i/Na_i)^1.5))*(K_o/(K_o+Km_K_o)));
	f_NaK=((1+.1245*exp((-0.1)*(F*V/(R*T)))+.0365*sigma*exp((-1)*(F*V/(R*T))))^(-1));
	sigma=(1/7*(exp(Na_o/(67.3 millimolar))-1));

	// <component name="Na_Ca_exchanger_current">
	i_NaCa=(I_NaCa_max*(exp(.35*F*V/(R*T))*Na_i^3*Ca_o-exp((-0.65)*F*V/(R*T))*Na_o^3*Ca_i)/((K_mNa^3+Na_o^3)*(K_mCa+Ca_o)*(1+K_sat*exp((-0.65)*V*F/(R*T)))));

	// <component name="background_currents">
	i_B_Na=(g_B_Na*(V-E_Na));
	i_B_Ca=(g_B_Ca*(V-E_Ca));
	i_B_K=(g_B_K*(V-E_K));
	i_B_Cl=(g_B_Cl*(V-E_Cl));
	E_Ca=(R*T/(2*F)*ln(Ca_o/Ca_i));

	// <component name="Ca_pump_current">
	i_p_Ca=(i_p_Ca_max*(Ca_i/((5E-4 millimolar)+Ca_i)));

	// <component name="Ca_release_current_from_JSR">
	i_rel=(K_rel*u^2*v*w*(Ca_rel-Ca_i));
	Fn=(1E-12*Ca_release_current_from_JSR.V_rel*i_rel-5E-13*(1/(2*F)*i_Ca-1/(5*F)*i_NaCa));

	// <component name="Ca_release_current_from_JSR_u_gate">
	u:time=((u_infinity-u)/tau_u);
	tau_u=(8 millisecond);
	u_infinity=((1+exp((Fn-3.4175000000000003E-13)/1.367E-15))^(-1));

	// <component name="Ca_release_current_from_JSR_v_gate">
	v:time=((v_infinity-v)/tau_v);
	tau_v=((1.91 millisecond)+(2.09 millisecond)*(1+exp((Fn-3.4175000000000003E-13)/1.367E-15))^(-1));
	v_infinity=(1-(1+exp((Fn-6.835E-14)/1.367E-15))^(-1));

	// <component name="Ca_release_current_from_JSR_w_gate">
	w:time=((w_infinity-w)/tau_w);
	tau_w=(((6 millisecond)-6*exp((V-(7.9 millivolt))/((-5 millivolt))))/((1+.3*exp((V-(7.9 millivolt))/((-5 millivolt))))*(V-(7.9 millivolt))));
	w_infinity=(1-(1+exp((V-(40 millivolt))/((-17 millivolt))))^(-1));

	// <component name="transfer_current_from_NSR_to_JSR">
	i_tr=((Ca_up-Ca_rel)/tau_tr);

	// <component name="Ca_uptake_current_by_the_NSR">
	i_up=(I_up_max/(1+K_up/Ca_i));

	// <component name="Ca_leak_current_by_the_NSR">
	i_up_leak=(I_up_max*(Ca_up/Ca_up_max));

	// <component name="Ca_buffers">
	Ca_CMDN=(200*Ca_i*(1-Ca_CMDN/CMDN_max)-.476*(Ca_CMDN/CMDN_max));
	J_Ca_CMDN=(Ca_CMDN:time);
	Ca_TRPN=(78.4*Ca_i*(1-Ca_TRPN/TRPN_max)-.392*(Ca_TRPN/TRPN_max));
	J_Ca_TRPN=(Ca_TRPN:time);
	Ca_CSQN=(.48*Ca_rel*(1-Ca_CSQN/CSQN_max)-.4*(Ca_CSQN/CSQN_max));
	J_Ca_CSQN=(Ca_CSQN:time);

	// <component name="intracellular_ion_concentrations">
	Na_i:time=(((-3)*i_NaK-(3*i_NaCa+i_B_Na+i_Na))/(V_i*F));
	K_i:time=((2*i_NaK-(i_K1+i_to+i_Kur_d+i_Kr+i_Ks+i_B_K))/(V_i*F));
	Cl_i:time=(i_Cl_Ca/(V_i*F));
	Ca_i:time=((2*i_NaCa-(i_p_Ca+i_Ca+i_B_Ca))/(2*V_i*F)+(V_up*(i_up_leak-i_up)+i_rel*intracellular_ion_concentrations.V_rel)/V_i-(TRPN_max*J_Ca_TRPN+CMDN_max*J_Ca_CMDN));
	Ca_up:time=(i_up-(i_up_leak+i_tr*(intracellular_ion_concentrations.V_rel/V_up)));
	Ca_rel:time=(i_tr-(i_rel+31*J_Ca_CSQN));

	// <component name="standard_ionic_concentrations">
}

