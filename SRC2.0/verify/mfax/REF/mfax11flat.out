JSim v1.1

unit conversion on;
unit kg = fundamental;
unit m = fundamental;
unit sec = fundamental;
unit amp = fundamental;
unit degK = fundamental;
unit mol = fundamental;
unit candela = fundamental;

unit dimensionless = 1  dimensionless;
unit radian = 1  dimensionless;
unit kg = 1 kg^1;
unit m = 1 m^1;
unit sec = 1 sec^1;
unit amp = 1 amp^1;
unit degK = 1 degK^1;
unit mol = 1 mol^1;
unit candela = 1 candela^1;
unit steradian = 1  dimensionless;
unit scalar = 1  dimensionless;
unit percent = .01  dimensionless;
unit mole = 1 mol^1;
unit mmol = .001 mol^1;
unit umol = 1E-6 mol^1;
unit nmol = 1E-9 mol^1;
unit pmol = 1E-12 mol^1;
unit meter = 1 m^1;
unit metre = 1 m^1;
unit mm = .001 m^1;
unit cm = .01 m^1;
unit km = 1E3 m^1;
unit micron = 1E-6 m^1;
unit um = 1E-6 m^1;
unit nm = 1E-9 m^1;
unit angstrom = 1E-10 m^1;
unit inch = .0254 m^1;
unit foot = .3048 m^1;
unit yard = .9144 m^1;
unit mile = 1609.344 m^1;
unit gram = .001 kg^1;
unit g = .001 kg^1;
unit mg = 1E-6 kg^1;
unit ug = 1E-9 kg^1;
unit amu = 1.660531E-27 kg^1;
unit dalton = 1.660531E-27 kg^1;
unit da = 1.660531E-27 kg^1;
unit second = 1 sec^1;
unit s = 1 sec^1;
unit min = 60 sec^1;
unit hour = 3600 sec^1;
unit hr = 3600 sec^1;
unit ms = .001 sec^1;
unit msec = .001 sec^1;
unit usec = 1E-6 sec^1;
unit hz = 1 sec^(-1);
unit hertz = 1 sec^(-1);
unit ml = 1E-6 m^3;
unit liter = .001 m^3;
unit litre = .001 m^3;
unit L = .001 m^3;
unit dL = 1E-4 m^3;
unit mL = 1E-6 m^3;
unit uL = 1E-9 m^3;
unit N = 1 kg^1*m^1*sec^(-2);
unit newton = 1 kg^1*m^1*sec^(-2);
unit dyn = 1E-5 kg^1*m^1*sec^(-2);
unit dyne = 1E-5 kg^1*m^1*sec^(-2);
unit pa = 1 kg^1*m^(-1)*sec^(-2);
unit pascal = 1 kg^1*m^(-1)*sec^(-2);
unit atm = 101325 kg^1*m^(-1)*sec^(-2);
unit mmHg = 1.3332237E2 kg^1*m^(-1)*sec^(-2);
unit torr = 1.3332237E2 kg^1*m^(-1)*sec^(-2);
unit cmH2O = 9.828409E1 kg^1*m^(-1)*sec^(-2);
unit bar = 1E5 kg^1*m^(-1)*sec^(-2);
unit erg = 1E-7 kg^1*m^2*sec^(-2);
unit joule = 1 kg^1*m^2*sec^(-2);
unit J = 1 kg^1*m^2*sec^(-2);
unit cal = 4.187 kg^1*m^2*sec^(-2);
unit calorie = 4.187 kg^1*m^2*sec^(-2);
unit watt = 1 kg^1*m^2*sec^(-3);
unit poise = .1 kg^1*m^(-1)*sec^(-1);
unit p = .1 kg^1*m^(-1)*sec^(-1);
unit cp = .001 kg^1*m^(-1)*sec^(-1);
unit P = .1 kg^1*m^(-1)*sec^(-1);
unit cP = .001 kg^1*m^(-1)*sec^(-1);
unit degR = .55555556 degK^1;
unit K = 1 degK^1;
unit kelvin = 1 degK^1;
unit A = 1 amp^1;
unit mA = .001 amp^1;
unit uA = 1E-6 amp^1;
unit ampere = 1 amp^1;
unit coulomb = 1 sec^1*amp^1;
unit faraday = 96485.341 sec^1*amp^1*mol^(-1);
unit volt = 1 kg^1*m^2*sec^(-3)*amp^(-1);
unit mV = .001 kg^1*m^2*sec^(-3)*amp^(-1);
unit ohm = 1 kg^1*m^2*sec^(-3)*amp^(-2);
unit mho = 1 kg^(-1)*m^(-2)*sec^3*amp^2;
unit mmho = .001 kg^(-1)*m^(-2)*sec^3*amp^2;
unit siemens = 1 kg^(-1)*m^(-2)*sec^3*amp^2;
unit mS = .001 kg^(-1)*m^(-2)*sec^3*amp^2;
unit uS = 1E-6 kg^(-1)*m^(-2)*sec^3*amp^2;
unit farad = 1 kg^(-1)*m^(-2)*sec^4*amp^2;
unit uF = 1E-6 kg^(-1)*m^(-2)*sec^4*amp^2;
unit weber = 1 kg^1*m^2*sec^(-2)*amp^(-1);
unit tesla = 1 kg^1*sec^(-2)*amp^(-1);
unit henry = 1 kg^1*m^2*sec^(-2)*amp^(-2);
unit gauss = 1E-4 kg^1*sec^(-2)*amp^(-1);
unit mu0 = 1.2566371E-6 kg^1*m^1*sec^(-2)*amp^(-2);
unit oersted = 79.57747155 m^(-1)*amp^1;
unit gilbert = .79577472 amp^1;
unit molar = 1E3 m^(-3)*mol^1;
unit Molar = 1E3 m^(-3)*mol^1;
unit M = 1E3 m^(-3)*mol^1;
unit mM = 1 m^(-3)*mol^1;
unit uM = 1E-3 m^(-3)*mol^1;
unit nM = 1E-6 m^(-3)*mol^1;
unit pM = 1E-9 m^(-3)*mol^1;
unit katal = 1 sec^(-1)*mol^1;
unit lumen = 1 candela^1;
unit lux = 1 m^(-2)*candela^1;
unit becquerel = 1 sec^(-1);
unit gray = 1 m^2*sec^(-2);
unit sievert = 1 m^2*sec^(-2);
math example11 {
	realDomain t sec;
	real C1.vol liter;
	real C1.A(t) mM;
	real C2.vol liter;
	real C2.A(t) mM;
	real Q1.flux(t) mmol/sec;
	real F1.flow(t) liter/sec;
	real F1.A(t) mM;
	real F2.flow(t);
	real F2.A(t) mM;
	real F3.flow(t);
	real F3.A(t) mM;
	t.min = 0;
	t.max = 10;
	t.delta = 1;
	C1.vol = 10;
	C2.vol = 5;
	Q1.flux = 1;
	F1.flow = 1;
	F2.flow = F1.flow;
	F3.flow = F2.flow;
	when (t=t.min) C1.A = 0;
	C1.A:t = F1.flow/C1.vol*F1.A-F2.flow/C1.vol*C1.A+Q1.flux/C1.vol;
	when (t=t.min) C2.A = 0;
	C2.A:t = F2.flow/C2.vol*F2.A-F3.flow/C2.vol*C2.A;
	F1.A = 0;
	F2.A = C1.A;
	F3.A = C2.A;
}

