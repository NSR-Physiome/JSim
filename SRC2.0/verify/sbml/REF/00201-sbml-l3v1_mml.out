// This model generated automatically from SBML
// MathML error:  Can't process <apply> operator xor 
// Untranslated math element:  piecewise(p1, xor(gt(S2, 4), lt(S2, 1), lt(S2, 2)), p2)

// unit definitions
import nsrunit;
unit conversion off;

// SBML property definitions
property sbmlRole=string;
property sbmlName=string;
property sbmlCompartment=string;

// SBML reactions
// reaction1: S1 <=> S2 
// reaction2: S3 <=> S4 

math main {
  realDomain time second;
  time.min=0;
  extern time.max;
  extern time.delta;

  // variable definitions
  real compartment = 1 L;
  real p1 = 1.5;
  real p2 = .05;
  real k1 = 1;
  real S1(time) M;
  real S2(time) M;
  real S3(time) M;
  real S4(time) M;
  real reaction1(time) katal;
  extern real reaction2 katal;

  // equations
  when (time=time.min) S1 = 5/compartment;
  (S1*compartment):time = -1*reaction1;
  when (time=time.min) S2 = 0;
  (S2*compartment):time = reaction1;
  when (time=time.min) S3 = 4/compartment;
  (S3*compartment):time = -1*reaction2;
  when (time=time.min) S4 = 0;
  (S4*compartment):time = reaction2;
  reaction1 = compartment*k1*S1;

  // variable properties
  compartment.sbmlRole="compartment";
  p1.sbmlRole="parameter";
  p2.sbmlRole="parameter";
  k1.sbmlRole="parameter";
  S1.sbmlRole="species";
  S1.sbmlCompartment="compartment";
  S2.sbmlRole="species";
  S2.sbmlCompartment="compartment";
  S3.sbmlRole="species";
  S3.sbmlCompartment="compartment";
  S4.sbmlRole="species";
  S4.sbmlCompartment="compartment";
  reaction1.sbmlRole="rate";
  reaction2.sbmlRole="rate";
}

