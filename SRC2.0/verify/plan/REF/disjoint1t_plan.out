==== Planner Log ====
Plan options=[maxBuildTime=120, maxImplicitBlock=10, initNaN=false, abortNaN=false, traceNaN=false, traceVars=, ignoreAllOverspec=false, ignoreAllUnderspec=false]
Loading Variables
  add var: realDomain t
  add var: real t.min
  add var: real t.max
  add var: int t.ct
  add var: real t.delta
  add var: realDomain n
  add var: real n.min
  add var: real n.max
  add var: int n.ct
  add var: real n.delta
  add var: realDomain m
  add var: real m.min
  add var: real m.max
  add var: int m.ct
  add var: real m.delta
  add var: real a(t,n)
  add var: real b1(t,m)
  add var: real b2(t,m)
  add var: real c(t,n)
Loading Constraints
  t.min=0 :: [t.min]
  t.max=1 :: [t.max]
  t.delta=1 :: [t.delta]
  n.min=0 :: [n.min]
  n.max=1 :: [n.max]
  n.delta=1 :: [n.delta]
  m.min=0 :: [m.min]
  m.max=1 :: [m.max]
  m.delta=1 :: [m.delta]
  a=(t+n) :: [a, t, n]
  b1=(a(t,n.max)+m) :: [b1, t, n.max, a(n.max), m]
  b2=(t+m) :: [b2, t, m]
  c=(b2(t,m.max)+n) :: [c, t, m.max, b2(m.max), n]
Input      phase completed with 0 errors, 0 warnings.

Toolbox phase starting ...
  add tool: domain t
  add tool: domain n
  add tool: domain m
Toolbox phase - cycle 1:
  check eqn: t.min=0; [t.min]
  add tool: t.min=0
  check eqn: t.max=1; [t.max]
  add tool: t.max=1
  check eqn: t.delta=1; [t.delta]
  add tool: t.delta=1
  add tool: t.ct=(t.max-t.min)/t.delta+1.5
  check eqn: n.min=0; [n.min]
  add tool: n.min=0
  check eqn: n.max=1; [n.max]
  add tool: n.max=1
  check eqn: n.delta=1; [n.delta]
  add tool: n.delta=1
  add tool: n.ct=(n.max-n.min)/n.delta+1.5
  check eqn: m.min=0; [m.min]
  add tool: m.min=0
  check eqn: m.max=1; [m.max]
  add tool: m.max=1
  check eqn: m.delta=1; [m.delta]
  add tool: m.delta=1
  add tool: m.ct=(m.max-m.min)/m.delta+1.5
  check eqn: a=(t+n); [a]
  add tool: a=t+n
  check eqn: b1=(a(t,n.max)+m); [b1]
  add tool: b1=a(t,n.max)+m
  check eqn: b2=(t+m); [b2]
  add tool: b2=t+m
  check eqn: c=(b2(t,m.max)+n); [c]
  add tool: c=b2(t,m.max)+n
Toolbox phase - all cycles completed
Toolbox    phase completed with 0 errors, 0 warnings.

Sequencing phase starting ...
Tools to sequence:
  @t@n c=b2(t,m.max)+n :: [c]<<[t, m.max, b2(m.max), n]
  @t@m b2=t+m :: [b2]<<[t, m]
  @t@m b1=a(t,n.max)+m :: [b1]<<[t, n.max, a(n.max), m]
  @t@n a=t+n :: [a]<<[t, n]
  m.delta=1 :: [m.delta]<<[]
  m.ct=(m.max-m.min)/m.delta+1.5 :: [m.ct]<<[m.max, m.min, m.delta]
  m.max=1 :: [m.max]<<[]
  m.min=0 :: [m.min]<<[]
  domain m :: [m]<<[m.min, m.max, m.ct, m.delta]
  n.delta=1 :: [n.delta]<<[]
  n.ct=(n.max-n.min)/n.delta+1.5 :: [n.ct]<<[n.max, n.min, n.delta]
  n.max=1 :: [n.max]<<[]
  n.min=0 :: [n.min]<<[]
  domain n :: [n]<<[n.min, n.max, n.ct, n.delta]
  t.delta=1 :: [t.delta]<<[]
  t.ct=(t.max-t.min)/t.delta+1.5 :: [t.ct]<<[t.max, t.min, t.delta]
  t.max=1 :: [t.max]<<[]
  t.min=0 :: [t.min]<<[]
  domain t :: [t]<<[t.min, t.max, t.ct, t.delta]
Events to seqence:
Relations to sequence:
Creating vuTools map ...
Adding reuse & query tools ...
  adding query tool: query [a(n.max)]<<[a]
  adding query tool: query [b2(m.max)]<<[b2]
Creating MainGraph ...
loopOrder=[t, n, m]
  addNode c seqLoops=(t,n) phase=t#1+n#1 fft=null
  addNode b2 seqLoops=(t,m) phase=t#1+m#1 fft=null
  addNode b1 seqLoops=(t,m) phase=t#1+m#1 fft=null
  addNode a seqLoops=(t,n) phase=t#1+n#1 fft=null
  addNode m.delta seqLoops=() phase=main fft=null
  addNode m.ct seqLoops=() phase=main fft=null
  addNode m.max seqLoops=() phase=main fft=null
  addNode m.min seqLoops=() phase=main fft=null
  addNode m seqLoops=() phase=main fft=null
  addNode n.delta seqLoops=() phase=main fft=null
  addNode n.ct seqLoops=() phase=main fft=null
  addNode n.max seqLoops=() phase=main fft=null
  addNode n.min seqLoops=() phase=main fft=null
  addNode n seqLoops=() phase=main fft=null
  addNode t.delta seqLoops=() phase=main fft=null
  addNode t.ct seqLoops=() phase=main fft=null
  addNode t.max seqLoops=() phase=main fft=null
  addNode t.min seqLoops=() phase=main fft=null
  addNode t seqLoops=() phase=main fft=null
  addNode a(n.max) seqLoops=(t) phase=t#1 fft=null
  addNode b2(m.max) seqLoops=(t) phase=t#1 fft=null
Saving graph pullfinder
Saving graph pullfinder
Building mainline block ...
Mainline block graph:
building block for phase main
  adding m.delta=1 to main
  adding m.max=1 to main
  adding m.min=0 to main
  adding n.delta=1 to main
  adding n.max=1 to main
  adding n.min=0 to main
  adding t.delta=1 to main
  adding t.max=1 to main
  adding t.min=0 to main
  adding m.ct=(m.max-m.min)/m.delta+1.5 to main
  adding domain m to main
  adding n.ct=(n.max-n.min)/n.delta+1.5 to main
  adding domain n to main
  adding t.ct=(t.max-t.min)/t.delta+1.5 to main
  adding domain t to main
  subphase t#1 entryEdge=null
building block for phase t#1
  subphase t#1+n#1 entryEdge=null
building block for phase t#1+n#1
  adding a=t+n to loop-n
  adding loop-n to loop-t
  subphase t#1+m#1 entryEdge=null
building block for phase t#1+m#1
  adding b2=t+m to loop-m
  adding loop-m to loop-t
  subphase t#1+m#2 entryEdge=a(n.max)->b1
  subphase t#1+n#2 entryEdge=b2(m.max)->c
  adding query [a(n.max)] to loop-t
  adding query [b2(m.max)] to loop-t
  subphase t#1+m#2 entryEdge=null
building block for phase t#1+m#2
  adding b1=a(t,n.max)+m to loop-m
  adding loop-m to loop-t
  subphase t#1+n#2 entryEdge=null
building block for phase t#1+n#2
  adding c=b2(t,m.max)+n to loop-n
  adding loop-n to loop-t
  adding loop-t to main
Sequencing phase completed with 0 errors, 0 warnings.

==== Main Calculation Block ====
main
  m.delta=1
  m.max=1
  m.min=0
  n.delta=1
  n.max=1
  n.min=0
  t.delta=1
  t.max=1
  t.min=0
  m.ct=(m.max-m.min)/m.delta+1.5
  domain m
  n.ct=(n.max-n.min)/n.delta+1.5
  domain n
  t.ct=(t.max-t.min)/t.delta+1.5
  domain t
  loop-t
    loop-n
      a=t+n
    loop-m
      b2=t+m
    query [a(n.max)]
    query [b2(m.max)]
    loop-m
      b1=a(t,n.max)+m
    loop-n
      c=b2(t,m.max)+n

