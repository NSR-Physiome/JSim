==== Planner Log ====
Plan options=[maxBuildTime=120, maxImplicitBlock=10, initNaN=false, abortNaN=false, traceNaN=false, traceVars=, ignoreAllOverspec=false, ignoreAllUnderspec=false]
Loading Variables
  add var: realDomain t
  add var: real t.min
  add var: real t.max
  add var: int t.ct
  add var: real t.delta
  add var: realDomain x
  add var: real x.min
  add var: real x.max
  add var: int x.ct
  add var: real x.delta
  add var: real u(t,x)
  add var: real v(t,x)
  add var: real w(t,x)
  add var: real wf(t)
  add var: real u:t(t,x)
Loading Constraints
  t.min=0 :: [t.min]
  t.max=10 :: [t.max]
  t.delta=1 :: [t.delta]
  x.min=0 :: [x.min]
  x.max=1 :: [x.max]
  x.ct=5 :: [x.ct]
  when (t=t.min) u=1 :: [u(t.min)]
  u:t=(wf*(-1)) :: [u:t, wf]
  v=(t+x) :: [v, t, x]
  w=(u+v) :: [w, u, v]
  when (x=x.max) wf=w :: [wf, w(x.max)]
Input      phase completed with 0 errors, 0 warnings.

Toolbox phase starting ...
  add tool: domain t
  add tool: domain x
Toolbox phase - cycle 1:
  check eqn: t.min=0; [t.min]
  add tool: t.min=0
  check eqn: t.max=10; [t.max]
  add tool: t.max=10
  check eqn: t.delta=1; [t.delta]
  add tool: t.delta=1
  add tool: t.ct=(t.max-t.min)/t.delta+1.5
  check eqn: x.min=0; [x.min]
  add tool: x.min=0
  check eqn: x.max=1; [x.max]
  add tool: x.max=1
  check eqn: x.ct=5; [x.ct]
  add tool: x.ct=5
  add tool: x.delta=(x.max-x.min)/(x.ct-1)
  check eqn: when (t=t.min) u=1; [u(t.min)]
  add tool: u(t.min)=1
  check eqn: u:t=(wf*(-1)); [u:t, wf]
  check eqn: v=(t+x); [v]
  add tool: v=t+x
  check eqn: w=(u+v); [w, u]
  check eqn: when (x=x.max) wf=w; [wf, w(x.max)]
  add tool: ODE u: []
  updated ODE(u) with u(t.min)=1
Toolbox phase - cycle 1:
  check eqn: u:t=(wf*(-1)); [u:t, wf]
  check eqn: w=(u+v); [w]
  add tool: w=u+v
  check eqn: when (x=x.max) wf=w; [wf]
  add tool: wf=when (x=x.max) w
Toolbox phase - cycle 1:
  check eqn: u:t=(wf*(-1)); [u:t]
  add tool: u:t=wf*(-1)
  updated ODE(u) with u:t=wf*(-1)
    u is now entirely solved
Toolbox phase - all cycles completed
  add var: real u__init(x)
  add tool: u__init=1
Toolbox    phase completed with 0 errors, 0 warnings.

Sequencing phase starting ...
Tools to sequence:
  @x u__init=1 :: [u__init]<<[]
  @t@x u:t=wf*(-1) :: [u:t]<<[wf]
  @t wf=when (x=x.max) w :: [wf]<<[w(x.max)]
  @t@x w=u+v :: [w]<<[u, v]
  @t@x v=t+x :: [v]<<[t, x]
  @t@x ODE u: u:t=wf*(-1) :: [u, u(t.max)]<<[wf, u(t.min), u:t]
  x.delta=(x.max-x.min)/(x.ct-1) :: [x.delta]<<[x.max, x.min, x.ct]
  x.ct=5 :: [x.ct]<<[]
  x.max=1 :: [x.max]<<[]
  x.min=0 :: [x.min]<<[]
  domain x :: [x]<<[x.min, x.max, x.ct, x.delta]
  t.delta=1 :: [t.delta]<<[]
  t.ct=(t.max-t.min)/t.delta+1.5 :: [t.ct]<<[t.max, t.min, t.delta]
  t.max=10 :: [t.max]<<[]
  t.min=0 :: [t.min]<<[]
  domain t :: [t]<<[t.min, t.max, t.ct, t.delta]
  @x u(t.min)=u__init :: [u(t.min)]<<[u__init]
Events to seqence:
Relations to sequence:
Creating vuTools map ...
Adding reuse & query tools ...
  adding query tool: query [w(x.max)]<<[w]
Creating MainGraph ...
loopOrder=[t, x]
  addNode u__init seqLoops=(x) phase=x#1 fft=null
  addNode u:t seqLoops=(t,x) phase=t#1+x#1 fft=null
  addNode wf seqLoops=(t) phase=t#1 fft=null
  addNode w seqLoops=(t,x) phase=t#1+x#1 fft=null
  addNode v seqLoops=(t,x) phase=t#1+x#1 fft=null
  addNode u seqLoops=(t,x) phase=t#1+x#1 fft=t
  addNode x.delta seqLoops=() phase=main fft=null
  addNode x.ct seqLoops=() phase=main fft=null
  addNode x.max seqLoops=() phase=main fft=null
  addNode x.min seqLoops=() phase=main fft=null
  addNode x seqLoops=() phase=main fft=null
  addNode t.delta seqLoops=() phase=main fft=null
  addNode t.ct seqLoops=() phase=main fft=null
  addNode t.max seqLoops=() phase=main fft=null
  addNode t.min seqLoops=() phase=main fft=null
  addNode t seqLoops=() phase=main fft=null
  addNode u(t.min) seqLoops=(x) phase=x#1 fft=null
  addNode w(x.max) seqLoops=(t) phase=t#1 fft=null
Saving graph pullfinder
Saving graph pullfinder
Building mainline block ...
Mainline block graph:
building block for phase main
  adding x.ct=5 to main
  adding x.max=1 to main
  adding x.min=0 to main
  adding t.delta=1 to main
  adding t.max=10 to main
  adding t.min=0 to main
  adding x.delta=(x.max-x.min)/(x.ct-1) to main
  adding domain x to main
  adding t.ct=(t.max-t.min)/t.delta+1.5 to main
  adding domain t to main
  subphase x#1 entryEdge=null
building block for phase x#1
  adding u__init=1 to loop-x
  adding u(t.min)=u__init to loop-x
  adding loop-x to main
  subphase t#1 entryEdge=null
building block for phase t#1
  subphase t#1+x#1 entryEdge=null
building block for phase t#1+x#1
  adding v=t+x to loop-x
  adding w=u+v to loop-x
  adding ODE Block-t [u] to loop-x
  adding loop-x to loop-t
  subphase t#1+x#2 entryEdge=wf->u:t
  adding query [w(x.max)] to loop-t
  adding wf=when (x=x.max) w to loop-t
  subphase t#1+x#2 entryEdge=null
building block for phase t#1+x#2
  adding u:t=wf*(-1) to loop-x
  adding loop-x to loop-t
  adding loop-t to main
Building ODE Block-t [u] ...
  adding muTool w=u+v
  adding muTool query [w(x.max)]
  adding muTool wf=when (x=x.max) w
  adding muVar wf
  adding muVar w(x.max)
  adding muVar w
  adding muTool v=t+x
  adding muVar v
  adding muTool u:t=wf*(-1)
  adding muVar u:t
  adding v=t+x to ODE Block-t [u]
  adding w=u+v to ODE Block-t [u]
  adding query [w(x.max)] to ODE Block-t [u]
  adding wf=when (x=x.max) w to ODE Block-t [u]
  adding u:t=wf*(-1) to ODE Block-t [u]
Sequencing phase completed with 0 errors, 0 warnings.

==== Main Calculation Block ====
main
  x.ct=5
  x.max=1
  x.min=0
  t.delta=1
  t.max=10
  t.min=0
  x.delta=(x.max-x.min)/(x.ct-1)
  domain x
  t.ct=(t.max-t.min)/t.delta+1.5
  domain t
  loop-x
    u__init=1
    u(t.min)=u__init
  loop-t
    loop-x
      v=t+x
      w=u+v
      ODE Block-t vmus=[t, u, wf, w(x.max), w, v, u:t]
        v=t+x
        w=u+v
        query [w(x.max)]
        wf=when (x=x.max) w
        u:t=wf*(-1)
    query [w(x.max)]
    wf=when (x=x.max) w
    loop-x
      u:t=wf*(-1)

