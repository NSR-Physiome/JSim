==== Planner Log ====
Plan options=[maxBuildTime=120, maxImplicitBlock=10, initNaN=false, abortNaN=false, traceNaN=false, traceVars=, ignoreAllOverspec=false, ignoreAllUnderspec=false, splitBlocks=false, parallelize=false]
Loading Variables
  add var: realDomain t
  add var: real t.min
  add var: real t.max
  add var: int t.ct
  add var: real t.delta
  add var: realDomain n
  add var: real n.min
  add var: real n.max
  add var: int n.ct
  add var: real n.delta
  add var: real a(t)
  add var: real b(n)
  add var: real c(t,n)
  add var: real d(t,n)
  add var: real u(t,n)
  add var: real u:t(t,n)
Loading Constraints
  t.min=0 :: [t.min]
  t.max=10 :: [t.max]
  t.delta=2 :: [t.delta]
  n.min=1 :: [n.min]
  n.max=3 :: [n.max]
  n.delta=1 :: [n.delta]
  a=(t^2) :: [a, t]
  b=(5+n) :: [b, n]
  c=(a+b) :: [c, a, b]
  d=(t+n) :: [d, t, n]
  when (t=t.min) u=n :: [u(t.min), n]
  u:t=(c+t) :: [u:t, c, t]
Input      phase completed with 0 errors, 0 warnings.

Toolbox phase starting ...
  add tool: domain t
  add tool: domain n
Toolbox phase - cycle 1:
  check eqn: t.min=0; [t.min]
  add tool: t.min=0
  check eqn: t.max=10; [t.max]
  add tool: t.max=10
  check eqn: t.delta=2; [t.delta]
  add tool: t.delta=2
  add tool: t.ct=(t.max-t.min)/t.delta+1.5
  check eqn: n.min=1; [n.min]
  add tool: n.min=1
  check eqn: n.max=3; [n.max]
  add tool: n.max=3
  check eqn: n.delta=1; [n.delta]
  add tool: n.delta=1
  add tool: n.ct=(n.max-n.min)/n.delta+1.5
  check eqn: a=(t^2); [a]
  add tool: a=t^2
  check eqn: b=(5+n); [b]
  add tool: b=5+n
  check eqn: c=(a+b); [c]
  add tool: c=a+b
  check eqn: d=(t+n); [d]
  add tool: d=t+n
  check eqn: when (t=t.min) u=n; [u(t.min)]
  add tool: u(t.min)=n
  check eqn: u:t=(c+t); [u:t]
  add tool: u:t=c+t
  add tool: ODE u: []
  updated ODE(u) with u(t.min)=n
  updated ODE(u) with u:t=c+t
    u is now entirely solved
Toolbox phase - all cycles completed
Toolbox    phase completed with 0 errors, 0 warnings.

Sequencing phase starting ...
Tools to sequence:
  @t@n u:t=c+t :: [u:t]<<[c, t]
  @t@n ODE u: u:t=c+t :: [u, u(t.max)]<<[c, t, u(t.min), u:t]
  @t@n d=t+n :: [d]<<[t, n]
  @t@n c=a+b :: [c]<<[a, b]
  @n b=5+n :: [b]<<[n]
  @t a=t^2 :: [a]<<[t]
  n.delta=1 :: [n.delta]<<[]
  n.ct=(n.max-n.min)/n.delta+1.5 :: [n.ct]<<[n.max, n.min, n.delta]
  n.max=3 :: [n.max]<<[]
  n.min=1 :: [n.min]<<[]
  domain n :: [n]<<[n.min, n.max, n.ct, n.delta]
  t.delta=2 :: [t.delta]<<[]
  t.ct=(t.max-t.min)/t.delta+1.5 :: [t.ct]<<[t.max, t.min, t.delta]
  t.max=10 :: [t.max]<<[]
  t.min=0 :: [t.min]<<[]
  domain t :: [t]<<[t.min, t.max, t.ct, t.delta]
  @n u(t.min)=n :: [u(t.min)]<<[n]
Events to seqence:
Relations to sequence:
Creating vuTools map ...
Adding reuse & query tools ...
Creating MainGraph ...
loopOrder=[t, n]
  addNode u:t seqLoops=(t,n) phase=t#1+n#1 fft=null
  addNode u seqLoops=(t,n) phase=t#1+n#1 fft=t
  addNode d seqLoops=(t,n) phase=t#1+n#1 fft=null
  addNode c seqLoops=(t,n) phase=t#1+n#1 fft=null
  addNode b seqLoops=(n) phase=n#1 fft=null
  addNode a seqLoops=(t) phase=t#1 fft=null
  addNode n.delta seqLoops=() phase=main fft=null
  addNode n.ct seqLoops=() phase=main fft=null
  addNode n.max seqLoops=() phase=main fft=null
  addNode n.min seqLoops=() phase=main fft=null
  addNode n seqLoops=() phase=main fft=null
  addNode t.delta seqLoops=() phase=main fft=null
  addNode t.ct seqLoops=() phase=main fft=null
  addNode t.max seqLoops=() phase=main fft=null
  addNode t.min seqLoops=() phase=main fft=null
  addNode t seqLoops=() phase=main fft=null
  addNode u(t.min) seqLoops=(n) phase=n#1 fft=null
Saving graph pullfinder
Building mainline block ...
Mainline block graph:
building block for phase main
  adding n.delta=1 to main
  adding n.max=3 to main
  adding n.min=1 to main
  adding t.delta=2 to main
  adding t.max=10 to main
  adding t.min=0 to main
  adding n.ct=(n.max-n.min)/n.delta+1.5 to main
  adding domain n to main
  adding t.ct=(t.max-t.min)/t.delta+1.5 to main
  adding domain t to main
  subphase t#1 entryEdge=u(t.min)->u
  subphase n#1 entryEdge=null
building block for phase n#1
  adding b=5+n to loop-n
  adding u(t.min)=n to loop-n
  adding loop-n to main
  subphase t#1 entryEdge=null
building block for phase t#1
  adding a=t^2 to loop-t
  subphase t#1+n#1 entryEdge=null
building block for phase t#1+n#1
  adding d=t+n to loop-n
  adding c=a+b to loop-n
  adding u:t=c+t to loop-n
  adding ODE Block-t [u] to loop-n
  adding loop-n to loop-t
  adding loop-t to main
Building ODE Block-t [u] ...
  adding muTool a=t^2
  adding muTool c=a+b
  adding muVar c
  adding muVar a
  adding muTool u:t=c+t
  adding muVar u:t
  adding a=t^2 to ODE Block-t [u]
  adding c=a+b to ODE Block-t [u]
  adding u:t=c+t to ODE Block-t [u]
Sequencing phase completed with 0 errors, 0 warnings.

==== Main Calculation Block ====
main
  n.delta=1
  n.max=3
  n.min=1
  t.delta=2
  t.max=10
  t.min=0
  n.ct=(n.max-n.min)/n.delta+1.5
  domain n
  t.ct=(t.max-t.min)/t.delta+1.5
  domain t
  loop-n
    b=5+n
    u(t.min)=n
  loop-t
    a=t^2
    loop-n
      d=t+n
      c=a+b
      u:t=c+t
      ODE Block-t vmus=[t, u, c, a, u:t]
        a=t^2
        c=a+b
        u:t=c+t

