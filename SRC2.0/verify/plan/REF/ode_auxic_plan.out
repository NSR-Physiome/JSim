==== Planner Log ====
Plan options=[maxBuildTime=120, maxImplicitBlock=10, initNaN=false, abortNaN=false, traceNaN=false, traceVars=, ignoreAllOverspec=false, ignoreAllUnderspec=false]
Loading Variables
  add var: realDomain t
  add var: real t.min
  add var: real t.max
  add var: int t.ct
  add var: real t.delta
  add var: real v(t)
  add var: real u(t)
  add var: real u:t(t)
Loading Constraints
  t.min=0 :: [t.min]
  t.max=3 :: [t.max]
  t.delta=.2 :: [t.delta]
  v=((t-1)^2) :: [v, t]
  when (t=t.min) u=v :: [u(t.min), v(t.min)]
  u:t=(u*(-1)) :: [u:t, u]
Input      phase completed with 0 errors, 0 warnings.

Toolbox phase starting ...
  add tool: domain t
Toolbox phase - cycle 1:
  check eqn: t.min=0; [t.min]
  add tool: t.min=0
  check eqn: t.max=3; [t.max]
  add tool: t.max=3
  check eqn: t.delta=.2; [t.delta]
  add tool: t.delta=.2
  add tool: t.ct=(t.max-t.min)/t.delta+1.5
  check eqn: v=((t-1)^2); [v]
  add tool: v=(t-1)^2
  check eqn: when (t=t.min) u=v; [u(t.min)]
  add tool: u(t.min)=when (t=t.min) v
  check eqn: u:t=(u*(-1)); [u:t, u]
  add tool: ODE u: []
  updated ODE(u) with u(t.min)=when (t=t.min) v
Toolbox phase - cycle 1:
  check eqn: u:t=(u*(-1)); [u:t]
  add tool: u:t=u*(-1)
  updated ODE(u) with u:t=u*(-1)
    u is now entirely solved
Toolbox phase - all cycles completed
Toolbox    phase completed with 0 errors, 0 warnings.

Sequencing phase starting ...
Tools to sequence:
  @t u:t=u*(-1) :: [u:t]<<[u]
  @t ODE u: u:t=u*(-1) :: [u, u(t.max)]<<[u(t.min), u:t]
  @t v=(t-1)^2 :: [v]<<[t]
  t.delta=.2 :: [t.delta]<<[]
  t.ct=(t.max-t.min)/t.delta+1.5 :: [t.ct]<<[t.max, t.min, t.delta]
  t.max=3 :: [t.max]<<[]
  t.min=0 :: [t.min]<<[]
  domain t :: [t]<<[t.min, t.max, t.ct, t.delta]
  u(t.min)=when (t=t.min) v :: [u(t.min)]<<[v(t.min)]
Events to seqence:
Relations to sequence:
Creating vuTools map ...
Adding reuse & query tools ...
  adding reuse tool: when (t=t.min) v=(t-1)^2 [v(t.min)]<<[t(min)]
  adding query tool: query [t(min)]<<[t]
Creating MainGraph ...
loopOrder=[t]
  addNode u:t seqLoops=(t) phase=t#1 fft=null
  addNode u seqLoops=(t) phase=t#1 fft=t
  addNode v seqLoops=(t) phase=t#1 fft=null
  addNode t.delta seqLoops=() phase=main fft=null
  addNode t.ct seqLoops=() phase=main fft=null
  addNode t.max seqLoops=() phase=main fft=null
  addNode t.min seqLoops=() phase=main fft=null
  addNode t seqLoops=() phase=main fft=null
  addNode u(t.min) seqLoops=() phase=main fft=null
  addNode v(t.min) seqLoops=() phase=main fft=null
  addNode t(min) seqLoops=() phase=main fft=null
Saving graph pullfinder
Building mainline block ...
Mainline block graph:
building block for phase main
  adding t.delta=.2 to main
  adding t.max=3 to main
  adding t.min=0 to main
  adding t.ct=(t.max-t.min)/t.delta+1.5 to main
  adding domain t to main
  adding query [t(min)] to main
  adding when (t=t.min) v=(t-1)^2 to main
  adding u(t.min)=when (t=t.min) v to main
  subphase t#1 entryEdge=null
building block for phase t#1
  adding u:t=u*(-1) to loop-t
  adding v=(t-1)^2 to loop-t
  adding ODE Block-t [u] to loop-t
  adding loop-t to main
Building ODE Block-t [u] ...
  adding muTool u:t=u*(-1)
  adding muVar u:t
  adding u:t=u*(-1) to ODE Block-t [u]
Sequencing phase completed with 0 errors, 0 warnings.

==== Main Calculation Block ====
main
  t.delta=.2
  t.max=3
  t.min=0
  t.ct=(t.max-t.min)/t.delta+1.5
  domain t
  query [t(min)]
  when (t=t.min) v=(t-1)^2
  u(t.min)=when (t=t.min) v
  loop-t
    u:t=u*(-1)
    v=(t-1)^2
    ODE Block-t vmus=[t, u, u:t]
      u:t=u*(-1)

