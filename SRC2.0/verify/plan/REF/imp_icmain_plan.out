==== Planner Log ====
Plan options=[maxBuildTime=120, maxImplicitBlock=10, initNaN=false, abortNaN=false, traceNaN=false, traceVars=, ignoreAllOverspec=false, ignoreAllUnderspec=false]
Loading Variables
  add var: realDomain t
  add var: real t.min
  add var: real t.max
  add var: int t.ct
  add var: real t.delta
  add var: real u(t)
  add var: real v
  add var: real u:t(t)
Loading Constraints
  t.min=0 :: [t.min]
  t.max=3 :: [t.max]
  t.delta=.2 :: [t.delta]
  (u(t.min)+v)=2 :: [t.min, u(t.min), v]
  (u(t.min)-v)=0 :: [t.min, u(t.min), v]
  u:t=v :: [u:t, v]
Input      phase completed with 0 errors, 0 warnings.

Toolbox phase starting ...
  add tool: domain t
Toolbox phase - cycle 1:
  check eqn: t.min=0; [t.min]
  add tool: t.min=0
  check eqn: t.max=3; [t.max]
  add tool: t.max=3
  check eqn: t.delta=.2; [t.delta]
  add tool: t.delta=.2
  add tool: t.ct=(t.max-t.min)/t.delta+1.5
  check eqn: (u(t.min)+v)=2; [u(t.min), v]
  check eqn: (u(t.min)-v)=0; [u(t.min), v]
  check eqn: u:t=v; [u:t, v]
Toolbox phase - cycle 1:
  check eqn: (u(t.min)+v)=2; [u(t.min), v]
  check eqn: (u(t.min)-v)=0; [u(t.min), v]
  check eqn: u:t=v; [u:t, v]
Toolbox phase - cycle 2:
  implicit block (3 2)=3.0
  Implicit tool [u(t.min), v] is linear
	1	1	-2
	1	-1	0
  add tool: [(u(t.min)+v)=2, (u(t.min)-v)=0]
Toolbox phase - cycle 1:
  check eqn: u:t=v; [u:t]
  add tool: u:t=v
  add tool: ODE u: []
  updated ODE(u) with [(u(t.min)+v)=2, (u(t.min)-v)=0]
  updated ODE(u) with u:t=v
    u is now entirely solved
Toolbox phase - all cycles completed
Toolbox    phase completed with 0 errors, 0 warnings.

Sequencing phase starting ...
Tools to sequence:
  @t u:t=v :: [u:t]<<[v]
  [(u(t.min)+v)=2, (u(t.min)-v)=0] :: [u(t.min), v]<<[t.min]
  @t ODE u: u:t=v :: [u, u(t.max)]<<[v, u(t.min), u:t]
  t.delta=.2 :: [t.delta]<<[]
  t.ct=(t.max-t.min)/t.delta+1.5 :: [t.ct]<<[t.max, t.min, t.delta]
  t.max=3 :: [t.max]<<[]
  t.min=0 :: [t.min]<<[]
  domain t :: [t]<<[t.min, t.max, t.ct, t.delta]
Events to seqence:
Relations to sequence:
Creating vuTools map ...
Adding reuse & query tools ...
Creating MainGraph ...
loopOrder=[t]
  addNode u:t seqLoops=(t) phase=t#1 fft=null
  addNode u(t.min),v seqLoops=() phase=main fft=null
  addNode u seqLoops=(t) phase=t#1 fft=t
  addNode t.delta seqLoops=() phase=main fft=null
  addNode t.ct seqLoops=() phase=main fft=null
  addNode t.max seqLoops=() phase=main fft=null
  addNode t.min seqLoops=() phase=main fft=null
  addNode t seqLoops=() phase=main fft=null
Saving graph pullfinder
Building mainline block ...
Mainline block graph:
building block for phase main
  adding t.delta=.2 to main
  adding t.max=3 to main
  adding t.min=0 to main
  adding t.ct=(t.max-t.min)/t.delta+1.5 to main
  adding domain t to main
  adding [(u(t.min)+v)=2, (u(t.min)-v)=0] to main
  subphase t#1 entryEdge=null
building block for phase t#1
  adding u:t=v to loop-t
  adding ODE Block-t [u] to loop-t
  adding loop-t to main
Building ODE Block-t [u] ...
Sequencing phase completed with 0 errors, 0 warnings.

==== Main Calculation Block ====
main
  t.delta=.2
  t.max=3
  t.min=0
  t.ct=(t.max-t.min)/t.delta+1.5
  domain t
  [(u(t.min)+v)=2, (u(t.min)-v)=0]
  loop-t
    u:t=v
    ODE Block-t vmus=[t, u]

