==== Planner Log ====
Plan options=[maxBuildTime=120, maxImplicitBlock=10, initNaN=false, abortNaN=false, traceNaN=false, traceVars=, ignoreAllOverspec=false, ignoreAllUnderspec=false]
Loading Variables
  add var: realDomain t
  add var: real t.min
  add var: real t.max
  add var: int t.ct
  add var: real t.delta
  add var: real a
  add var: real u(t)
  add var: real v(t)
  add var: real u:t(t)
  add var: real v:t(t)
Loading Constraints
  t.min=0 :: [t.min]
  t.max=5 :: [t.max]
  t.delta=.2 :: [t.delta]
  a=1 :: [a]
  when (t=t.min) (u+v)=(a^2) :: [u(t.min), v(t.min), a]
  when (t=t.min) (u-v)=a :: [u(t.min), v(t.min), a]
  u:t=(v-u) :: [u:t, v, u]
  v:t=(u-v) :: [v:t, u, v]
Input      phase completed with 0 errors, 0 warnings.

Toolbox phase starting ...
  add tool: domain t
Toolbox phase - cycle 1:
  check eqn: t.min=0; [t.min]
  add tool: t.min=0
  check eqn: t.max=5; [t.max]
  add tool: t.max=5
  check eqn: t.delta=.2; [t.delta]
  add tool: t.delta=.2
  add tool: t.ct=(t.max-t.min)/t.delta+1.5
  check eqn: a=1; [a]
  add tool: a=1
  check eqn: when (t=t.min) (u+v)=(a^2); [u(t.min), v(t.min)]
  check eqn: when (t=t.min) (u-v)=a; [u(t.min), v(t.min)]
  check eqn: u:t=(v-u); [u:t, v]
  check eqn: v:t=(u-v); [v:t, u]
Toolbox phase - cycle 1:
  check eqn: when (t=t.min) (u+v)=(a^2); [u(t.min), v(t.min)]
  check eqn: when (t=t.min) (u-v)=a; [u(t.min), v(t.min)]
  check eqn: u:t=(v-u); [u:t, v]
  check eqn: v:t=(u-v); [v:t, u]
Toolbox phase - cycle 2:
  implicit block (2 2)=1.0
  Implicit tool [u(t.min), v(t.min)] is linear
	1	1	a^2*(-1)
	1	-1	a*(-1)
  add tool: [when (t=t.min) (u+v)=(a^2), when (t=t.min) (u-v)=a]
Toolbox phase - cycle 1:
  check eqn: u:t=(v-u); [u:t, v]
  check eqn: v:t=(u-v); [v:t, u]
  add tool: ODE u: []
  updated ODE(u) with [when (t=t.min) (u+v)=(a^2), when (t=t.min) (u-v)=a]
  add tool: ODE v: []
  updated ODE(v) with [when (t=t.min) (u+v)=(a^2), when (t=t.min) (u-v)=a]
Toolbox phase - cycle 1:
  check eqn: u:t=(v-u); [u:t]
  add tool: u:t=v-u
  check eqn: v:t=(u-v); [v:t]
  add tool: v:t=u-v
  updated ODE(u) with u:t=v-u
    u is now entirely solved
  updated ODE(v) with v:t=u-v
    v is now entirely solved
Toolbox phase - all cycles completed
Toolbox    phase completed with 0 errors, 0 warnings.

Sequencing phase starting ...
Tools to sequence:
  @t v:t=u-v :: [v:t]<<[u, v]
  @t u:t=v-u :: [u:t]<<[v, u]
  @t ODE v: v:t=u-v :: [v, v(t.max)]<<[u, v(t.min), v:t]
  @t ODE u: u:t=v-u :: [u, u(t.max)]<<[v, u(t.min), u:t]
  a=1 :: [a]<<[]
  t.delta=.2 :: [t.delta]<<[]
  t.ct=(t.max-t.min)/t.delta+1.5 :: [t.ct]<<[t.max, t.min, t.delta]
  t.max=5 :: [t.max]<<[]
  t.min=0 :: [t.min]<<[]
  domain t :: [t]<<[t.min, t.max, t.ct, t.delta]
  [when (t=t.min) (u+v)=(a^2), when (t=t.min) (u-v)=a] :: [u(t.min), v(t.min)]<<[a]
Events to seqence:
Relations to sequence:
Creating vuTools map ...
Adding reuse & query tools ...
Creating MainGraph ...
loopOrder=[t]
  addNode v:t seqLoops=(t) phase=t#1 fft=null
  addNode u:t seqLoops=(t) phase=t#1 fft=null
  addNode v seqLoops=(t) phase=t#1 fft=t
  addNode u seqLoops=(t) phase=t#1 fft=t
  addNode a seqLoops=() phase=main fft=null
  addNode t.delta seqLoops=() phase=main fft=null
  addNode t.ct seqLoops=() phase=main fft=null
  addNode t.max seqLoops=() phase=main fft=null
  addNode t.min seqLoops=() phase=main fft=null
  addNode t seqLoops=() phase=main fft=null
  addNode u(t.min),v(t.min) seqLoops=() phase=main fft=null
Saving graph pullfinder
Building mainline block ...
Mainline block graph:
building block for phase main
  adding a=1 to main
  adding t.delta=.2 to main
  adding t.max=5 to main
  adding t.min=0 to main
  adding t.ct=(t.max-t.min)/t.delta+1.5 to main
  adding domain t to main
  adding [when (t=t.min) (u+v)=(a^2), when (t=t.min) (u-v)=a] to main
  subphase t#1 entryEdge=null
building block for phase t#1
  adding v:t=u-v to loop-t
  adding u:t=v-u to loop-t
  adding ODE Block-t [v, u] to loop-t
  adding loop-t to main
Building ODE Block-t [v, u] ...
  adding muTool v:t=u-v
  adding muVar v:t
  adding muTool u:t=v-u
  adding muVar u:t
  adding v:t=u-v to ODE Block-t [v, u]
  adding u:t=v-u to ODE Block-t [v, u]
Sequencing phase completed with 0 errors, 0 warnings.

==== Main Calculation Block ====
main
  a=1
  t.delta=.2
  t.max=5
  t.min=0
  t.ct=(t.max-t.min)/t.delta+1.5
  domain t
  [when (t=t.min) (u+v)=(a^2), when (t=t.min) (u-v)=a]
  loop-t
    v:t=u-v
    u:t=v-u
    ODE Block-t vmus=[t, v, u, v:t, u:t]
      v:t=u-v
      u:t=v-u

