==== Planner Log ====
Plan options=[maxBuildTime=120, maxImplicitBlock=10, initNaN=false, abortNaN=false, traceNaN=false, traceVars=, ignoreAllOverspec=false, ignoreAllUnderspec=false, splitBlocks=false, parallelize=false]
Loading Variables
  add var: realDomain t
  add var: real t.min
  add var: real t.max
  add var: int t.ct
  add var: real t.delta
  add var: real a
  add var: real b(t)
  add var: real c(t)
  add var: real u(t)
  add var: real u:t(t)
Loading Constraints
  t.min=0 :: [t.min]
  t.max=4 :: [t.max]
  t.delta=1 :: [t.delta]
  a=1 :: [a]
  (b+c)=10 :: [b, c]
  (b-c)=4 :: [b, c]
  when (t=t.min) u=a :: [u(t.min), a]
  u:t=(a+b) :: [u:t, a, b]
Input      phase completed with 0 errors, 0 warnings.

Toolbox phase starting ...
  add tool: domain t
Toolbox phase - cycle 1:
  check eqn: t.min=0; [t.min]
  add tool: t.min=0
  check eqn: t.max=4; [t.max]
  add tool: t.max=4
  check eqn: t.delta=1; [t.delta]
  add tool: t.delta=1
  add tool: t.ct=(t.max-t.min)/t.delta+1.5
  check eqn: a=1; [a]
  add tool: a=1
  check eqn: (b+c)=10; [b, c]
  check eqn: (b-c)=4; [b, c]
  check eqn: when (t=t.min) u=a; [u(t.min)]
  add tool: u(t.min)=a
  check eqn: u:t=(a+b); [u:t, b]
  add tool: ODE u: []
  updated ODE(u) with u(t.min)=a
Toolbox phase - cycle 1:
  check eqn: (b+c)=10; [b, c]
  check eqn: (b-c)=4; [b, c]
  check eqn: u:t=(a+b); [u:t, b]
Toolbox phase - cycle 2:
  implicit block (3 2)=3.0
  Implicit tool [b, c] is linear
	1	1	-10
	1	-1	-4
  add tool: [(b+c)=10, (b-c)=4]
Toolbox phase - cycle 1:
  check eqn: u:t=(a+b); [u:t]
  add tool: u:t=a+b
  updated ODE(u) with u:t=a+b
    u is now entirely solved
Toolbox phase - all cycles completed
Toolbox    phase completed with 0 errors, 0 warnings.

Sequencing phase starting ...
Tools to sequence:
  @t u:t=a+b :: [u:t]<<[a, b]
  @t ODE u: u:t=a+b :: [u, u(t.max)]<<[a, b, u(t.min), u:t]
  @t [(b+c)=10, (b-c)=4] :: [b, c]<<[]
  a=1 :: [a]<<[]
  t.delta=1 :: [t.delta]<<[]
  t.ct=(t.max-t.min)/t.delta+1.5 :: [t.ct]<<[t.max, t.min, t.delta]
  t.max=4 :: [t.max]<<[]
  t.min=0 :: [t.min]<<[]
  domain t :: [t]<<[t.min, t.max, t.ct, t.delta]
  u(t.min)=a :: [u(t.min)]<<[a]
Events to seqence:
Relations to sequence:
Creating vuTools map ...
Adding reuse & query tools ...
Creating MainGraph ...
loopOrder=[t]
  addNode u:t seqLoops=(t) phase=t#1 fft=null
  addNode u seqLoops=(t) phase=t#1 fft=t
  addNode b,c seqLoops=(t) phase=t#1 fft=null
  addNode a seqLoops=() phase=main fft=null
  addNode t.delta seqLoops=() phase=main fft=null
  addNode t.ct seqLoops=() phase=main fft=null
  addNode t.max seqLoops=() phase=main fft=null
  addNode t.min seqLoops=() phase=main fft=null
  addNode t seqLoops=() phase=main fft=null
  addNode u(t.min) seqLoops=() phase=main fft=null
Saving graph pullfinder
Building mainline block ...
Mainline block graph:
building block for phase main
  adding a=1 to main
  adding t.delta=1 to main
  adding t.max=4 to main
  adding t.min=0 to main
  adding t.ct=(t.max-t.min)/t.delta+1.5 to main
  adding domain t to main
  adding u(t.min)=a to main
  subphase t#1 entryEdge=null
building block for phase t#1
  adding [(b+c)=10, (b-c)=4] to loop-t
  adding u:t=a+b to loop-t
  adding ODE Block-t [u] to loop-t
  adding loop-t to main
Building ODE Block-t [u] ...
Sequencing phase completed with 0 errors, 0 warnings.

==== Main Calculation Block ====
main
  a=1
  t.delta=1
  t.max=4
  t.min=0
  t.ct=(t.max-t.min)/t.delta+1.5
  domain t
  u(t.min)=a
  loop-t
    [(b+c)=10, (b-c)=4]
    u:t=a+b
    ODE Block-t vmus=[t, u]

